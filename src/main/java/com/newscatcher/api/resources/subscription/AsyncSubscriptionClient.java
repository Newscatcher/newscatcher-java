/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.newscatcher.api.resources.subscription;

import com.newscatcher.api.core.ClientOptions;
import com.newscatcher.api.core.RequestOptions;
import com.newscatcher.api.types.SubscriptionResponseDto;
import java.util.concurrent.CompletableFuture;

public class AsyncSubscriptionClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawSubscriptionClient rawClient;

    public AsyncSubscriptionClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawSubscriptionClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawSubscriptionClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Retrieves information about your subscription plan.
     */
    public CompletableFuture<SubscriptionResponseDto> get() {
        return this.rawClient.get().thenApply(response -> response.body());
    }

    /**
     * Retrieves information about your subscription plan.
     */
    public CompletableFuture<SubscriptionResponseDto> get(RequestOptions requestOptions) {
        return this.rawClient.get(requestOptions).thenApply(response -> response.body());
    }

    /**
     * Retrieves information about your subscription plan.
     */
    public CompletableFuture<SubscriptionResponseDto> post() {
        return this.rawClient.post().thenApply(response -> response.body());
    }

    /**
     * Retrieves information about your subscription plan.
     */
    public CompletableFuture<SubscriptionResponseDto> post(RequestOptions requestOptions) {
        return this.rawClient.post(requestOptions).thenApply(response -> response.body());
    }
}
