/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.newscatcher.api.resources.search;

import com.newscatcher.api.core.ClientOptions;
import com.newscatcher.api.core.RequestOptions;
import com.newscatcher.api.resources.search.requests.SearchGetRequest;
import com.newscatcher.api.resources.search.requests.SearchPostRequest;
import com.newscatcher.api.resources.search.types.SearchGetResponse;
import com.newscatcher.api.resources.search.types.SearchPostResponse;
import java.util.concurrent.CompletableFuture;

public class AsyncSearchClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawSearchClient rawClient;

    public AsyncSearchClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawSearchClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawSearchClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Searches for articles based on specified criteria such as keyword, language, country, source, and more.
     */
    public CompletableFuture<SearchGetResponse> get(SearchGetRequest request) {
        return this.rawClient.get(request).thenApply(response -> response.body());
    }

    /**
     * Searches for articles based on specified criteria such as keyword, language, country, source, and more.
     */
    public CompletableFuture<SearchGetResponse> get(SearchGetRequest request, RequestOptions requestOptions) {
        return this.rawClient.get(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Searches for articles based on specified criteria such as keyword, language, country, source, and more.
     */
    public CompletableFuture<SearchPostResponse> post(SearchPostRequest request) {
        return this.rawClient.post(request).thenApply(response -> response.body());
    }

    /**
     * Searches for articles based on specified criteria such as keyword, language, country, source, and more.
     */
    public CompletableFuture<SearchPostResponse> post(SearchPostRequest request, RequestOptions requestOptions) {
        return this.rawClient.post(request, requestOptions).thenApply(response -> response.body());
    }
}
