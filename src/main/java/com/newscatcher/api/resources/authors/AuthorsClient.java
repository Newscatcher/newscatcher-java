/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.newscatcher.api.resources.authors;

import com.newscatcher.api.core.ClientOptions;
import com.newscatcher.api.core.RequestOptions;
import com.newscatcher.api.resources.authors.requests.AuthorsGetRequest;
import com.newscatcher.api.resources.authors.requests.AuthorsPostRequest;
import com.newscatcher.api.resources.authors.types.AuthorsGetResponse;
import com.newscatcher.api.resources.authors.types.AuthorsPostResponse;

public class AuthorsClient {
    protected final ClientOptions clientOptions;

    private final RawAuthorsClient rawClient;

    public AuthorsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawAuthorsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawAuthorsClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Searches for articles written by a specified author. You can filter results by language, country, source, and more.
     */
    public AuthorsGetResponse get(AuthorsGetRequest request) {
        return this.rawClient.get(request).body();
    }

    /**
     * Searches for articles written by a specified author. You can filter results by language, country, source, and more.
     */
    public AuthorsGetResponse get(AuthorsGetRequest request, RequestOptions requestOptions) {
        return this.rawClient.get(request, requestOptions).body();
    }

    /**
     * Searches for articles by author. You can filter results by language, country, source, and more.
     */
    public AuthorsPostResponse post(AuthorsPostRequest request) {
        return this.rawClient.post(request).body();
    }

    /**
     * Searches for articles by author. You can filter results by language, country, source, and more.
     */
    public AuthorsPostResponse post(AuthorsPostRequest request, RequestOptions requestOptions) {
        return this.rawClient.post(request, requestOptions).body();
    }
}
