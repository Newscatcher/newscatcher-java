/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.newscatcher.api.resources.searchsimilar;

import com.newscatcher.api.core.ClientOptions;
import com.newscatcher.api.core.RequestOptions;
import com.newscatcher.api.resources.searchsimilar.requests.SearchSimilarGetRequest;
import com.newscatcher.api.resources.searchsimilar.requests.SearchSimilarPostRequest;
import com.newscatcher.api.resources.searchsimilar.types.SearchSimilarGetResponse;
import com.newscatcher.api.resources.searchsimilar.types.SearchSimilarPostResponse;
import java.util.concurrent.CompletableFuture;

public class AsyncSearchsimilarClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawSearchsimilarClient rawClient;

    public AsyncSearchsimilarClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawSearchsimilarClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawSearchsimilarClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Searches for articles similar to a specified query.
     */
    public CompletableFuture<SearchSimilarGetResponse> get(SearchSimilarGetRequest request) {
        return this.rawClient.get(request).thenApply(response -> response.body());
    }

    /**
     * Searches for articles similar to a specified query.
     */
    public CompletableFuture<SearchSimilarGetResponse> get(
            SearchSimilarGetRequest request, RequestOptions requestOptions) {
        return this.rawClient.get(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Searches for articles similar to the specified query. You can filter results by language, country, source, and more.
     */
    public CompletableFuture<SearchSimilarPostResponse> post(SearchSimilarPostRequest request) {
        return this.rawClient.post(request).thenApply(response -> response.body());
    }

    /**
     * Searches for articles similar to the specified query. You can filter results by language, country, source, and more.
     */
    public CompletableFuture<SearchSimilarPostResponse> post(
            SearchSimilarPostRequest request, RequestOptions requestOptions) {
        return this.rawClient.post(request, requestOptions).thenApply(response -> response.body());
    }
}
