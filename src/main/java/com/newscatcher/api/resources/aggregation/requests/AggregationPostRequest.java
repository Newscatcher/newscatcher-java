/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.newscatcher.api.resources.aggregation.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.newscatcher.api.core.ObjectMappers;
import com.newscatcher.api.types.AggregationBy;
import com.newscatcher.api.types.AllDomainLinks;
import com.newscatcher.api.types.AllLinks;
import com.newscatcher.api.types.Countries;
import com.newscatcher.api.types.From;
import com.newscatcher.api.types.IptcTags;
import com.newscatcher.api.types.Lang;
import com.newscatcher.api.types.NotAuthorName;
import com.newscatcher.api.types.NotCountries;
import com.newscatcher.api.types.NotIptcTags;
import com.newscatcher.api.types.NotLang;
import com.newscatcher.api.types.NotSources;
import com.newscatcher.api.types.NotTheme;
import com.newscatcher.api.types.ParentUrl;
import com.newscatcher.api.types.PredefinedSources;
import com.newscatcher.api.types.PublishedDatePrecision;
import com.newscatcher.api.types.SortBy;
import com.newscatcher.api.types.Sources;
import com.newscatcher.api.types.Theme;
import com.newscatcher.api.types.To;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = AggregationPostRequest.Builder.class)
public final class AggregationPostRequest {
    private final String q;

    private final Optional<AggregationBy> aggregationBy;

    private final Optional<String> searchIn;

    private final Optional<PredefinedSources> predefinedSources;

    private final Optional<Sources> sources;

    private final Optional<NotSources> notSources;

    private final Optional<Lang> lang;

    private final Optional<NotLang> notLang;

    private final Optional<Countries> countries;

    private final Optional<NotCountries> notCountries;

    private final Optional<NotAuthorName> notAuthorName;

    private final Optional<From> from;

    private final Optional<To> to;

    private final Optional<PublishedDatePrecision> publishedDatePrecision;

    private final Optional<Boolean> byParseDate;

    private final Optional<SortBy> sortBy;

    private final Optional<Boolean> rankedOnly;

    private final Optional<Integer> fromRank;

    private final Optional<Integer> toRank;

    private final Optional<Boolean> isHeadline;

    private final Optional<Boolean> isOpinion;

    private final Optional<Boolean> isPaidContent;

    private final Optional<ParentUrl> parentUrl;

    private final Optional<AllLinks> allLinks;

    private final Optional<AllDomainLinks> allDomainLinks;

    private final Optional<Integer> wordCountMin;

    private final Optional<Integer> wordCountMax;

    private final Optional<Integer> page;

    private final Optional<Integer> pageSize;

    private final Optional<Boolean> includeNlpData;

    private final Optional<Boolean> hasNlp;

    private final Optional<Theme> theme;

    private final Optional<NotTheme> notTheme;

    private final Optional<String> orgEntityName;

    private final Optional<String> perEntityName;

    private final Optional<String> locEntityName;

    private final Optional<String> miscEntityName;

    private final Optional<Float> titleSentimentMin;

    private final Optional<Float> titleSentimentMax;

    private final Optional<Float> contentSentimentMin;

    private final Optional<Float> contentSentimentMax;

    private final Optional<IptcTags> iptcTags;

    private final Optional<NotIptcTags> notIptcTags;

    private final Optional<Boolean> robotsCompliant;

    private final Map<String, Object> additionalProperties;

    private AggregationPostRequest(
            String q,
            Optional<AggregationBy> aggregationBy,
            Optional<String> searchIn,
            Optional<PredefinedSources> predefinedSources,
            Optional<Sources> sources,
            Optional<NotSources> notSources,
            Optional<Lang> lang,
            Optional<NotLang> notLang,
            Optional<Countries> countries,
            Optional<NotCountries> notCountries,
            Optional<NotAuthorName> notAuthorName,
            Optional<From> from,
            Optional<To> to,
            Optional<PublishedDatePrecision> publishedDatePrecision,
            Optional<Boolean> byParseDate,
            Optional<SortBy> sortBy,
            Optional<Boolean> rankedOnly,
            Optional<Integer> fromRank,
            Optional<Integer> toRank,
            Optional<Boolean> isHeadline,
            Optional<Boolean> isOpinion,
            Optional<Boolean> isPaidContent,
            Optional<ParentUrl> parentUrl,
            Optional<AllLinks> allLinks,
            Optional<AllDomainLinks> allDomainLinks,
            Optional<Integer> wordCountMin,
            Optional<Integer> wordCountMax,
            Optional<Integer> page,
            Optional<Integer> pageSize,
            Optional<Boolean> includeNlpData,
            Optional<Boolean> hasNlp,
            Optional<Theme> theme,
            Optional<NotTheme> notTheme,
            Optional<String> orgEntityName,
            Optional<String> perEntityName,
            Optional<String> locEntityName,
            Optional<String> miscEntityName,
            Optional<Float> titleSentimentMin,
            Optional<Float> titleSentimentMax,
            Optional<Float> contentSentimentMin,
            Optional<Float> contentSentimentMax,
            Optional<IptcTags> iptcTags,
            Optional<NotIptcTags> notIptcTags,
            Optional<Boolean> robotsCompliant,
            Map<String, Object> additionalProperties) {
        this.q = q;
        this.aggregationBy = aggregationBy;
        this.searchIn = searchIn;
        this.predefinedSources = predefinedSources;
        this.sources = sources;
        this.notSources = notSources;
        this.lang = lang;
        this.notLang = notLang;
        this.countries = countries;
        this.notCountries = notCountries;
        this.notAuthorName = notAuthorName;
        this.from = from;
        this.to = to;
        this.publishedDatePrecision = publishedDatePrecision;
        this.byParseDate = byParseDate;
        this.sortBy = sortBy;
        this.rankedOnly = rankedOnly;
        this.fromRank = fromRank;
        this.toRank = toRank;
        this.isHeadline = isHeadline;
        this.isOpinion = isOpinion;
        this.isPaidContent = isPaidContent;
        this.parentUrl = parentUrl;
        this.allLinks = allLinks;
        this.allDomainLinks = allDomainLinks;
        this.wordCountMin = wordCountMin;
        this.wordCountMax = wordCountMax;
        this.page = page;
        this.pageSize = pageSize;
        this.includeNlpData = includeNlpData;
        this.hasNlp = hasNlp;
        this.theme = theme;
        this.notTheme = notTheme;
        this.orgEntityName = orgEntityName;
        this.perEntityName = perEntityName;
        this.locEntityName = locEntityName;
        this.miscEntityName = miscEntityName;
        this.titleSentimentMin = titleSentimentMin;
        this.titleSentimentMax = titleSentimentMax;
        this.contentSentimentMin = contentSentimentMin;
        this.contentSentimentMax = contentSentimentMax;
        this.iptcTags = iptcTags;
        this.notIptcTags = notIptcTags;
        this.robotsCompliant = robotsCompliant;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("q")
    public String getQ() {
        return q;
    }

    @JsonProperty("aggregation_by")
    public Optional<AggregationBy> getAggregationBy() {
        return aggregationBy;
    }

    @JsonProperty("search_in")
    public Optional<String> getSearchIn() {
        return searchIn;
    }

    @JsonProperty("predefined_sources")
    public Optional<PredefinedSources> getPredefinedSources() {
        return predefinedSources;
    }

    @JsonProperty("sources")
    public Optional<Sources> getSources() {
        return sources;
    }

    @JsonProperty("not_sources")
    public Optional<NotSources> getNotSources() {
        return notSources;
    }

    @JsonProperty("lang")
    public Optional<Lang> getLang() {
        return lang;
    }

    @JsonProperty("not_lang")
    public Optional<NotLang> getNotLang() {
        return notLang;
    }

    @JsonProperty("countries")
    public Optional<Countries> getCountries() {
        return countries;
    }

    @JsonProperty("not_countries")
    public Optional<NotCountries> getNotCountries() {
        return notCountries;
    }

    @JsonProperty("not_author_name")
    public Optional<NotAuthorName> getNotAuthorName() {
        return notAuthorName;
    }

    @JsonProperty("from_")
    public Optional<From> getFrom() {
        return from;
    }

    @JsonProperty("to_")
    public Optional<To> getTo() {
        return to;
    }

    @JsonProperty("published_date_precision")
    public Optional<PublishedDatePrecision> getPublishedDatePrecision() {
        return publishedDatePrecision;
    }

    @JsonProperty("by_parse_date")
    public Optional<Boolean> getByParseDate() {
        return byParseDate;
    }

    @JsonProperty("sort_by")
    public Optional<SortBy> getSortBy() {
        return sortBy;
    }

    @JsonProperty("ranked_only")
    public Optional<Boolean> getRankedOnly() {
        return rankedOnly;
    }

    @JsonProperty("from_rank")
    public Optional<Integer> getFromRank() {
        return fromRank;
    }

    @JsonProperty("to_rank")
    public Optional<Integer> getToRank() {
        return toRank;
    }

    @JsonProperty("is_headline")
    public Optional<Boolean> getIsHeadline() {
        return isHeadline;
    }

    @JsonProperty("is_opinion")
    public Optional<Boolean> getIsOpinion() {
        return isOpinion;
    }

    @JsonProperty("is_paid_content")
    public Optional<Boolean> getIsPaidContent() {
        return isPaidContent;
    }

    @JsonProperty("parent_url")
    public Optional<ParentUrl> getParentUrl() {
        return parentUrl;
    }

    @JsonProperty("all_links")
    public Optional<AllLinks> getAllLinks() {
        return allLinks;
    }

    @JsonProperty("all_domain_links")
    public Optional<AllDomainLinks> getAllDomainLinks() {
        return allDomainLinks;
    }

    @JsonProperty("word_count_min")
    public Optional<Integer> getWordCountMin() {
        return wordCountMin;
    }

    @JsonProperty("word_count_max")
    public Optional<Integer> getWordCountMax() {
        return wordCountMax;
    }

    @JsonProperty("page")
    public Optional<Integer> getPage() {
        return page;
    }

    @JsonProperty("page_size")
    public Optional<Integer> getPageSize() {
        return pageSize;
    }

    @JsonProperty("include_nlp_data")
    public Optional<Boolean> getIncludeNlpData() {
        return includeNlpData;
    }

    @JsonProperty("has_nlp")
    public Optional<Boolean> getHasNlp() {
        return hasNlp;
    }

    @JsonProperty("theme")
    public Optional<Theme> getTheme() {
        return theme;
    }

    @JsonProperty("not_theme")
    public Optional<NotTheme> getNotTheme() {
        return notTheme;
    }

    @JsonProperty("ORG_entity_name")
    public Optional<String> getOrgEntityName() {
        return orgEntityName;
    }

    @JsonProperty("PER_entity_name")
    public Optional<String> getPerEntityName() {
        return perEntityName;
    }

    @JsonProperty("LOC_entity_name")
    public Optional<String> getLocEntityName() {
        return locEntityName;
    }

    @JsonProperty("MISC_entity_name")
    public Optional<String> getMiscEntityName() {
        return miscEntityName;
    }

    @JsonProperty("title_sentiment_min")
    public Optional<Float> getTitleSentimentMin() {
        return titleSentimentMin;
    }

    @JsonProperty("title_sentiment_max")
    public Optional<Float> getTitleSentimentMax() {
        return titleSentimentMax;
    }

    @JsonProperty("content_sentiment_min")
    public Optional<Float> getContentSentimentMin() {
        return contentSentimentMin;
    }

    @JsonProperty("content_sentiment_max")
    public Optional<Float> getContentSentimentMax() {
        return contentSentimentMax;
    }

    @JsonProperty("iptc_tags")
    public Optional<IptcTags> getIptcTags() {
        return iptcTags;
    }

    @JsonProperty("not_iptc_tags")
    public Optional<NotIptcTags> getNotIptcTags() {
        return notIptcTags;
    }

    @JsonProperty("robots_compliant")
    public Optional<Boolean> getRobotsCompliant() {
        return robotsCompliant;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof AggregationPostRequest && equalTo((AggregationPostRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(AggregationPostRequest other) {
        return q.equals(other.q)
                && aggregationBy.equals(other.aggregationBy)
                && searchIn.equals(other.searchIn)
                && predefinedSources.equals(other.predefinedSources)
                && sources.equals(other.sources)
                && notSources.equals(other.notSources)
                && lang.equals(other.lang)
                && notLang.equals(other.notLang)
                && countries.equals(other.countries)
                && notCountries.equals(other.notCountries)
                && notAuthorName.equals(other.notAuthorName)
                && from.equals(other.from)
                && to.equals(other.to)
                && publishedDatePrecision.equals(other.publishedDatePrecision)
                && byParseDate.equals(other.byParseDate)
                && sortBy.equals(other.sortBy)
                && rankedOnly.equals(other.rankedOnly)
                && fromRank.equals(other.fromRank)
                && toRank.equals(other.toRank)
                && isHeadline.equals(other.isHeadline)
                && isOpinion.equals(other.isOpinion)
                && isPaidContent.equals(other.isPaidContent)
                && parentUrl.equals(other.parentUrl)
                && allLinks.equals(other.allLinks)
                && allDomainLinks.equals(other.allDomainLinks)
                && wordCountMin.equals(other.wordCountMin)
                && wordCountMax.equals(other.wordCountMax)
                && page.equals(other.page)
                && pageSize.equals(other.pageSize)
                && includeNlpData.equals(other.includeNlpData)
                && hasNlp.equals(other.hasNlp)
                && theme.equals(other.theme)
                && notTheme.equals(other.notTheme)
                && orgEntityName.equals(other.orgEntityName)
                && perEntityName.equals(other.perEntityName)
                && locEntityName.equals(other.locEntityName)
                && miscEntityName.equals(other.miscEntityName)
                && titleSentimentMin.equals(other.titleSentimentMin)
                && titleSentimentMax.equals(other.titleSentimentMax)
                && contentSentimentMin.equals(other.contentSentimentMin)
                && contentSentimentMax.equals(other.contentSentimentMax)
                && iptcTags.equals(other.iptcTags)
                && notIptcTags.equals(other.notIptcTags)
                && robotsCompliant.equals(other.robotsCompliant);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.q,
                this.aggregationBy,
                this.searchIn,
                this.predefinedSources,
                this.sources,
                this.notSources,
                this.lang,
                this.notLang,
                this.countries,
                this.notCountries,
                this.notAuthorName,
                this.from,
                this.to,
                this.publishedDatePrecision,
                this.byParseDate,
                this.sortBy,
                this.rankedOnly,
                this.fromRank,
                this.toRank,
                this.isHeadline,
                this.isOpinion,
                this.isPaidContent,
                this.parentUrl,
                this.allLinks,
                this.allDomainLinks,
                this.wordCountMin,
                this.wordCountMax,
                this.page,
                this.pageSize,
                this.includeNlpData,
                this.hasNlp,
                this.theme,
                this.notTheme,
                this.orgEntityName,
                this.perEntityName,
                this.locEntityName,
                this.miscEntityName,
                this.titleSentimentMin,
                this.titleSentimentMax,
                this.contentSentimentMin,
                this.contentSentimentMax,
                this.iptcTags,
                this.notIptcTags,
                this.robotsCompliant);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static QStage builder() {
        return new Builder();
    }

    public interface QStage {
        _FinalStage q(@NotNull String q);

        Builder from(AggregationPostRequest other);
    }

    public interface _FinalStage {
        AggregationPostRequest build();

        _FinalStage aggregationBy(Optional<AggregationBy> aggregationBy);

        _FinalStage aggregationBy(AggregationBy aggregationBy);

        _FinalStage searchIn(Optional<String> searchIn);

        _FinalStage searchIn(String searchIn);

        _FinalStage predefinedSources(Optional<PredefinedSources> predefinedSources);

        _FinalStage predefinedSources(PredefinedSources predefinedSources);

        _FinalStage sources(Optional<Sources> sources);

        _FinalStage sources(Sources sources);

        _FinalStage notSources(Optional<NotSources> notSources);

        _FinalStage notSources(NotSources notSources);

        _FinalStage lang(Optional<Lang> lang);

        _FinalStage lang(Lang lang);

        _FinalStage notLang(Optional<NotLang> notLang);

        _FinalStage notLang(NotLang notLang);

        _FinalStage countries(Optional<Countries> countries);

        _FinalStage countries(Countries countries);

        _FinalStage notCountries(Optional<NotCountries> notCountries);

        _FinalStage notCountries(NotCountries notCountries);

        _FinalStage notAuthorName(Optional<NotAuthorName> notAuthorName);

        _FinalStage notAuthorName(NotAuthorName notAuthorName);

        _FinalStage from(Optional<From> from);

        _FinalStage from(From from);

        _FinalStage to(Optional<To> to);

        _FinalStage to(To to);

        _FinalStage publishedDatePrecision(Optional<PublishedDatePrecision> publishedDatePrecision);

        _FinalStage publishedDatePrecision(PublishedDatePrecision publishedDatePrecision);

        _FinalStage byParseDate(Optional<Boolean> byParseDate);

        _FinalStage byParseDate(Boolean byParseDate);

        _FinalStage sortBy(Optional<SortBy> sortBy);

        _FinalStage sortBy(SortBy sortBy);

        _FinalStage rankedOnly(Optional<Boolean> rankedOnly);

        _FinalStage rankedOnly(Boolean rankedOnly);

        _FinalStage fromRank(Optional<Integer> fromRank);

        _FinalStage fromRank(Integer fromRank);

        _FinalStage toRank(Optional<Integer> toRank);

        _FinalStage toRank(Integer toRank);

        _FinalStage isHeadline(Optional<Boolean> isHeadline);

        _FinalStage isHeadline(Boolean isHeadline);

        _FinalStage isOpinion(Optional<Boolean> isOpinion);

        _FinalStage isOpinion(Boolean isOpinion);

        _FinalStage isPaidContent(Optional<Boolean> isPaidContent);

        _FinalStage isPaidContent(Boolean isPaidContent);

        _FinalStage parentUrl(Optional<ParentUrl> parentUrl);

        _FinalStage parentUrl(ParentUrl parentUrl);

        _FinalStage allLinks(Optional<AllLinks> allLinks);

        _FinalStage allLinks(AllLinks allLinks);

        _FinalStage allDomainLinks(Optional<AllDomainLinks> allDomainLinks);

        _FinalStage allDomainLinks(AllDomainLinks allDomainLinks);

        _FinalStage wordCountMin(Optional<Integer> wordCountMin);

        _FinalStage wordCountMin(Integer wordCountMin);

        _FinalStage wordCountMax(Optional<Integer> wordCountMax);

        _FinalStage wordCountMax(Integer wordCountMax);

        _FinalStage page(Optional<Integer> page);

        _FinalStage page(Integer page);

        _FinalStage pageSize(Optional<Integer> pageSize);

        _FinalStage pageSize(Integer pageSize);

        _FinalStage includeNlpData(Optional<Boolean> includeNlpData);

        _FinalStage includeNlpData(Boolean includeNlpData);

        _FinalStage hasNlp(Optional<Boolean> hasNlp);

        _FinalStage hasNlp(Boolean hasNlp);

        _FinalStage theme(Optional<Theme> theme);

        _FinalStage theme(Theme theme);

        _FinalStage notTheme(Optional<NotTheme> notTheme);

        _FinalStage notTheme(NotTheme notTheme);

        _FinalStage orgEntityName(Optional<String> orgEntityName);

        _FinalStage orgEntityName(String orgEntityName);

        _FinalStage perEntityName(Optional<String> perEntityName);

        _FinalStage perEntityName(String perEntityName);

        _FinalStage locEntityName(Optional<String> locEntityName);

        _FinalStage locEntityName(String locEntityName);

        _FinalStage miscEntityName(Optional<String> miscEntityName);

        _FinalStage miscEntityName(String miscEntityName);

        _FinalStage titleSentimentMin(Optional<Float> titleSentimentMin);

        _FinalStage titleSentimentMin(Float titleSentimentMin);

        _FinalStage titleSentimentMax(Optional<Float> titleSentimentMax);

        _FinalStage titleSentimentMax(Float titleSentimentMax);

        _FinalStage contentSentimentMin(Optional<Float> contentSentimentMin);

        _FinalStage contentSentimentMin(Float contentSentimentMin);

        _FinalStage contentSentimentMax(Optional<Float> contentSentimentMax);

        _FinalStage contentSentimentMax(Float contentSentimentMax);

        _FinalStage iptcTags(Optional<IptcTags> iptcTags);

        _FinalStage iptcTags(IptcTags iptcTags);

        _FinalStage notIptcTags(Optional<NotIptcTags> notIptcTags);

        _FinalStage notIptcTags(NotIptcTags notIptcTags);

        _FinalStage robotsCompliant(Optional<Boolean> robotsCompliant);

        _FinalStage robotsCompliant(Boolean robotsCompliant);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements QStage, _FinalStage {
        private String q;

        private Optional<Boolean> robotsCompliant = Optional.empty();

        private Optional<NotIptcTags> notIptcTags = Optional.empty();

        private Optional<IptcTags> iptcTags = Optional.empty();

        private Optional<Float> contentSentimentMax = Optional.empty();

        private Optional<Float> contentSentimentMin = Optional.empty();

        private Optional<Float> titleSentimentMax = Optional.empty();

        private Optional<Float> titleSentimentMin = Optional.empty();

        private Optional<String> miscEntityName = Optional.empty();

        private Optional<String> locEntityName = Optional.empty();

        private Optional<String> perEntityName = Optional.empty();

        private Optional<String> orgEntityName = Optional.empty();

        private Optional<NotTheme> notTheme = Optional.empty();

        private Optional<Theme> theme = Optional.empty();

        private Optional<Boolean> hasNlp = Optional.empty();

        private Optional<Boolean> includeNlpData = Optional.empty();

        private Optional<Integer> pageSize = Optional.empty();

        private Optional<Integer> page = Optional.empty();

        private Optional<Integer> wordCountMax = Optional.empty();

        private Optional<Integer> wordCountMin = Optional.empty();

        private Optional<AllDomainLinks> allDomainLinks = Optional.empty();

        private Optional<AllLinks> allLinks = Optional.empty();

        private Optional<ParentUrl> parentUrl = Optional.empty();

        private Optional<Boolean> isPaidContent = Optional.empty();

        private Optional<Boolean> isOpinion = Optional.empty();

        private Optional<Boolean> isHeadline = Optional.empty();

        private Optional<Integer> toRank = Optional.empty();

        private Optional<Integer> fromRank = Optional.empty();

        private Optional<Boolean> rankedOnly = Optional.empty();

        private Optional<SortBy> sortBy = Optional.empty();

        private Optional<Boolean> byParseDate = Optional.empty();

        private Optional<PublishedDatePrecision> publishedDatePrecision = Optional.empty();

        private Optional<To> to = Optional.empty();

        private Optional<From> from = Optional.empty();

        private Optional<NotAuthorName> notAuthorName = Optional.empty();

        private Optional<NotCountries> notCountries = Optional.empty();

        private Optional<Countries> countries = Optional.empty();

        private Optional<NotLang> notLang = Optional.empty();

        private Optional<Lang> lang = Optional.empty();

        private Optional<NotSources> notSources = Optional.empty();

        private Optional<Sources> sources = Optional.empty();

        private Optional<PredefinedSources> predefinedSources = Optional.empty();

        private Optional<String> searchIn = Optional.empty();

        private Optional<AggregationBy> aggregationBy = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(AggregationPostRequest other) {
            q(other.getQ());
            aggregationBy(other.getAggregationBy());
            searchIn(other.getSearchIn());
            predefinedSources(other.getPredefinedSources());
            sources(other.getSources());
            notSources(other.getNotSources());
            lang(other.getLang());
            notLang(other.getNotLang());
            countries(other.getCountries());
            notCountries(other.getNotCountries());
            notAuthorName(other.getNotAuthorName());
            from(other.getFrom());
            to(other.getTo());
            publishedDatePrecision(other.getPublishedDatePrecision());
            byParseDate(other.getByParseDate());
            sortBy(other.getSortBy());
            rankedOnly(other.getRankedOnly());
            fromRank(other.getFromRank());
            toRank(other.getToRank());
            isHeadline(other.getIsHeadline());
            isOpinion(other.getIsOpinion());
            isPaidContent(other.getIsPaidContent());
            parentUrl(other.getParentUrl());
            allLinks(other.getAllLinks());
            allDomainLinks(other.getAllDomainLinks());
            wordCountMin(other.getWordCountMin());
            wordCountMax(other.getWordCountMax());
            page(other.getPage());
            pageSize(other.getPageSize());
            includeNlpData(other.getIncludeNlpData());
            hasNlp(other.getHasNlp());
            theme(other.getTheme());
            notTheme(other.getNotTheme());
            orgEntityName(other.getOrgEntityName());
            perEntityName(other.getPerEntityName());
            locEntityName(other.getLocEntityName());
            miscEntityName(other.getMiscEntityName());
            titleSentimentMin(other.getTitleSentimentMin());
            titleSentimentMax(other.getTitleSentimentMax());
            contentSentimentMin(other.getContentSentimentMin());
            contentSentimentMax(other.getContentSentimentMax());
            iptcTags(other.getIptcTags());
            notIptcTags(other.getNotIptcTags());
            robotsCompliant(other.getRobotsCompliant());
            return this;
        }

        @java.lang.Override
        @JsonSetter("q")
        public _FinalStage q(@NotNull String q) {
            this.q = Objects.requireNonNull(q, "q must not be null");
            return this;
        }

        @java.lang.Override
        public _FinalStage robotsCompliant(Boolean robotsCompliant) {
            this.robotsCompliant = Optional.ofNullable(robotsCompliant);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "robots_compliant", nulls = Nulls.SKIP)
        public _FinalStage robotsCompliant(Optional<Boolean> robotsCompliant) {
            this.robotsCompliant = robotsCompliant;
            return this;
        }

        @java.lang.Override
        public _FinalStage notIptcTags(NotIptcTags notIptcTags) {
            this.notIptcTags = Optional.ofNullable(notIptcTags);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "not_iptc_tags", nulls = Nulls.SKIP)
        public _FinalStage notIptcTags(Optional<NotIptcTags> notIptcTags) {
            this.notIptcTags = notIptcTags;
            return this;
        }

        @java.lang.Override
        public _FinalStage iptcTags(IptcTags iptcTags) {
            this.iptcTags = Optional.ofNullable(iptcTags);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "iptc_tags", nulls = Nulls.SKIP)
        public _FinalStage iptcTags(Optional<IptcTags> iptcTags) {
            this.iptcTags = iptcTags;
            return this;
        }

        @java.lang.Override
        public _FinalStage contentSentimentMax(Float contentSentimentMax) {
            this.contentSentimentMax = Optional.ofNullable(contentSentimentMax);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "content_sentiment_max", nulls = Nulls.SKIP)
        public _FinalStage contentSentimentMax(Optional<Float> contentSentimentMax) {
            this.contentSentimentMax = contentSentimentMax;
            return this;
        }

        @java.lang.Override
        public _FinalStage contentSentimentMin(Float contentSentimentMin) {
            this.contentSentimentMin = Optional.ofNullable(contentSentimentMin);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "content_sentiment_min", nulls = Nulls.SKIP)
        public _FinalStage contentSentimentMin(Optional<Float> contentSentimentMin) {
            this.contentSentimentMin = contentSentimentMin;
            return this;
        }

        @java.lang.Override
        public _FinalStage titleSentimentMax(Float titleSentimentMax) {
            this.titleSentimentMax = Optional.ofNullable(titleSentimentMax);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "title_sentiment_max", nulls = Nulls.SKIP)
        public _FinalStage titleSentimentMax(Optional<Float> titleSentimentMax) {
            this.titleSentimentMax = titleSentimentMax;
            return this;
        }

        @java.lang.Override
        public _FinalStage titleSentimentMin(Float titleSentimentMin) {
            this.titleSentimentMin = Optional.ofNullable(titleSentimentMin);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "title_sentiment_min", nulls = Nulls.SKIP)
        public _FinalStage titleSentimentMin(Optional<Float> titleSentimentMin) {
            this.titleSentimentMin = titleSentimentMin;
            return this;
        }

        @java.lang.Override
        public _FinalStage miscEntityName(String miscEntityName) {
            this.miscEntityName = Optional.ofNullable(miscEntityName);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "MISC_entity_name", nulls = Nulls.SKIP)
        public _FinalStage miscEntityName(Optional<String> miscEntityName) {
            this.miscEntityName = miscEntityName;
            return this;
        }

        @java.lang.Override
        public _FinalStage locEntityName(String locEntityName) {
            this.locEntityName = Optional.ofNullable(locEntityName);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "LOC_entity_name", nulls = Nulls.SKIP)
        public _FinalStage locEntityName(Optional<String> locEntityName) {
            this.locEntityName = locEntityName;
            return this;
        }

        @java.lang.Override
        public _FinalStage perEntityName(String perEntityName) {
            this.perEntityName = Optional.ofNullable(perEntityName);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "PER_entity_name", nulls = Nulls.SKIP)
        public _FinalStage perEntityName(Optional<String> perEntityName) {
            this.perEntityName = perEntityName;
            return this;
        }

        @java.lang.Override
        public _FinalStage orgEntityName(String orgEntityName) {
            this.orgEntityName = Optional.ofNullable(orgEntityName);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "ORG_entity_name", nulls = Nulls.SKIP)
        public _FinalStage orgEntityName(Optional<String> orgEntityName) {
            this.orgEntityName = orgEntityName;
            return this;
        }

        @java.lang.Override
        public _FinalStage notTheme(NotTheme notTheme) {
            this.notTheme = Optional.ofNullable(notTheme);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "not_theme", nulls = Nulls.SKIP)
        public _FinalStage notTheme(Optional<NotTheme> notTheme) {
            this.notTheme = notTheme;
            return this;
        }

        @java.lang.Override
        public _FinalStage theme(Theme theme) {
            this.theme = Optional.ofNullable(theme);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "theme", nulls = Nulls.SKIP)
        public _FinalStage theme(Optional<Theme> theme) {
            this.theme = theme;
            return this;
        }

        @java.lang.Override
        public _FinalStage hasNlp(Boolean hasNlp) {
            this.hasNlp = Optional.ofNullable(hasNlp);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "has_nlp", nulls = Nulls.SKIP)
        public _FinalStage hasNlp(Optional<Boolean> hasNlp) {
            this.hasNlp = hasNlp;
            return this;
        }

        @java.lang.Override
        public _FinalStage includeNlpData(Boolean includeNlpData) {
            this.includeNlpData = Optional.ofNullable(includeNlpData);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "include_nlp_data", nulls = Nulls.SKIP)
        public _FinalStage includeNlpData(Optional<Boolean> includeNlpData) {
            this.includeNlpData = includeNlpData;
            return this;
        }

        @java.lang.Override
        public _FinalStage pageSize(Integer pageSize) {
            this.pageSize = Optional.ofNullable(pageSize);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "page_size", nulls = Nulls.SKIP)
        public _FinalStage pageSize(Optional<Integer> pageSize) {
            this.pageSize = pageSize;
            return this;
        }

        @java.lang.Override
        public _FinalStage page(Integer page) {
            this.page = Optional.ofNullable(page);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "page", nulls = Nulls.SKIP)
        public _FinalStage page(Optional<Integer> page) {
            this.page = page;
            return this;
        }

        @java.lang.Override
        public _FinalStage wordCountMax(Integer wordCountMax) {
            this.wordCountMax = Optional.ofNullable(wordCountMax);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "word_count_max", nulls = Nulls.SKIP)
        public _FinalStage wordCountMax(Optional<Integer> wordCountMax) {
            this.wordCountMax = wordCountMax;
            return this;
        }

        @java.lang.Override
        public _FinalStage wordCountMin(Integer wordCountMin) {
            this.wordCountMin = Optional.ofNullable(wordCountMin);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "word_count_min", nulls = Nulls.SKIP)
        public _FinalStage wordCountMin(Optional<Integer> wordCountMin) {
            this.wordCountMin = wordCountMin;
            return this;
        }

        @java.lang.Override
        public _FinalStage allDomainLinks(AllDomainLinks allDomainLinks) {
            this.allDomainLinks = Optional.ofNullable(allDomainLinks);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "all_domain_links", nulls = Nulls.SKIP)
        public _FinalStage allDomainLinks(Optional<AllDomainLinks> allDomainLinks) {
            this.allDomainLinks = allDomainLinks;
            return this;
        }

        @java.lang.Override
        public _FinalStage allLinks(AllLinks allLinks) {
            this.allLinks = Optional.ofNullable(allLinks);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "all_links", nulls = Nulls.SKIP)
        public _FinalStage allLinks(Optional<AllLinks> allLinks) {
            this.allLinks = allLinks;
            return this;
        }

        @java.lang.Override
        public _FinalStage parentUrl(ParentUrl parentUrl) {
            this.parentUrl = Optional.ofNullable(parentUrl);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "parent_url", nulls = Nulls.SKIP)
        public _FinalStage parentUrl(Optional<ParentUrl> parentUrl) {
            this.parentUrl = parentUrl;
            return this;
        }

        @java.lang.Override
        public _FinalStage isPaidContent(Boolean isPaidContent) {
            this.isPaidContent = Optional.ofNullable(isPaidContent);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "is_paid_content", nulls = Nulls.SKIP)
        public _FinalStage isPaidContent(Optional<Boolean> isPaidContent) {
            this.isPaidContent = isPaidContent;
            return this;
        }

        @java.lang.Override
        public _FinalStage isOpinion(Boolean isOpinion) {
            this.isOpinion = Optional.ofNullable(isOpinion);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "is_opinion", nulls = Nulls.SKIP)
        public _FinalStage isOpinion(Optional<Boolean> isOpinion) {
            this.isOpinion = isOpinion;
            return this;
        }

        @java.lang.Override
        public _FinalStage isHeadline(Boolean isHeadline) {
            this.isHeadline = Optional.ofNullable(isHeadline);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "is_headline", nulls = Nulls.SKIP)
        public _FinalStage isHeadline(Optional<Boolean> isHeadline) {
            this.isHeadline = isHeadline;
            return this;
        }

        @java.lang.Override
        public _FinalStage toRank(Integer toRank) {
            this.toRank = Optional.ofNullable(toRank);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "to_rank", nulls = Nulls.SKIP)
        public _FinalStage toRank(Optional<Integer> toRank) {
            this.toRank = toRank;
            return this;
        }

        @java.lang.Override
        public _FinalStage fromRank(Integer fromRank) {
            this.fromRank = Optional.ofNullable(fromRank);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "from_rank", nulls = Nulls.SKIP)
        public _FinalStage fromRank(Optional<Integer> fromRank) {
            this.fromRank = fromRank;
            return this;
        }

        @java.lang.Override
        public _FinalStage rankedOnly(Boolean rankedOnly) {
            this.rankedOnly = Optional.ofNullable(rankedOnly);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "ranked_only", nulls = Nulls.SKIP)
        public _FinalStage rankedOnly(Optional<Boolean> rankedOnly) {
            this.rankedOnly = rankedOnly;
            return this;
        }

        @java.lang.Override
        public _FinalStage sortBy(SortBy sortBy) {
            this.sortBy = Optional.ofNullable(sortBy);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "sort_by", nulls = Nulls.SKIP)
        public _FinalStage sortBy(Optional<SortBy> sortBy) {
            this.sortBy = sortBy;
            return this;
        }

        @java.lang.Override
        public _FinalStage byParseDate(Boolean byParseDate) {
            this.byParseDate = Optional.ofNullable(byParseDate);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "by_parse_date", nulls = Nulls.SKIP)
        public _FinalStage byParseDate(Optional<Boolean> byParseDate) {
            this.byParseDate = byParseDate;
            return this;
        }

        @java.lang.Override
        public _FinalStage publishedDatePrecision(PublishedDatePrecision publishedDatePrecision) {
            this.publishedDatePrecision = Optional.ofNullable(publishedDatePrecision);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "published_date_precision", nulls = Nulls.SKIP)
        public _FinalStage publishedDatePrecision(Optional<PublishedDatePrecision> publishedDatePrecision) {
            this.publishedDatePrecision = publishedDatePrecision;
            return this;
        }

        @java.lang.Override
        public _FinalStage to(To to) {
            this.to = Optional.ofNullable(to);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "to_", nulls = Nulls.SKIP)
        public _FinalStage to(Optional<To> to) {
            this.to = to;
            return this;
        }

        @java.lang.Override
        public _FinalStage from(From from) {
            this.from = Optional.ofNullable(from);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "from_", nulls = Nulls.SKIP)
        public _FinalStage from(Optional<From> from) {
            this.from = from;
            return this;
        }

        @java.lang.Override
        public _FinalStage notAuthorName(NotAuthorName notAuthorName) {
            this.notAuthorName = Optional.ofNullable(notAuthorName);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "not_author_name", nulls = Nulls.SKIP)
        public _FinalStage notAuthorName(Optional<NotAuthorName> notAuthorName) {
            this.notAuthorName = notAuthorName;
            return this;
        }

        @java.lang.Override
        public _FinalStage notCountries(NotCountries notCountries) {
            this.notCountries = Optional.ofNullable(notCountries);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "not_countries", nulls = Nulls.SKIP)
        public _FinalStage notCountries(Optional<NotCountries> notCountries) {
            this.notCountries = notCountries;
            return this;
        }

        @java.lang.Override
        public _FinalStage countries(Countries countries) {
            this.countries = Optional.ofNullable(countries);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "countries", nulls = Nulls.SKIP)
        public _FinalStage countries(Optional<Countries> countries) {
            this.countries = countries;
            return this;
        }

        @java.lang.Override
        public _FinalStage notLang(NotLang notLang) {
            this.notLang = Optional.ofNullable(notLang);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "not_lang", nulls = Nulls.SKIP)
        public _FinalStage notLang(Optional<NotLang> notLang) {
            this.notLang = notLang;
            return this;
        }

        @java.lang.Override
        public _FinalStage lang(Lang lang) {
            this.lang = Optional.ofNullable(lang);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "lang", nulls = Nulls.SKIP)
        public _FinalStage lang(Optional<Lang> lang) {
            this.lang = lang;
            return this;
        }

        @java.lang.Override
        public _FinalStage notSources(NotSources notSources) {
            this.notSources = Optional.ofNullable(notSources);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "not_sources", nulls = Nulls.SKIP)
        public _FinalStage notSources(Optional<NotSources> notSources) {
            this.notSources = notSources;
            return this;
        }

        @java.lang.Override
        public _FinalStage sources(Sources sources) {
            this.sources = Optional.ofNullable(sources);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "sources", nulls = Nulls.SKIP)
        public _FinalStage sources(Optional<Sources> sources) {
            this.sources = sources;
            return this;
        }

        @java.lang.Override
        public _FinalStage predefinedSources(PredefinedSources predefinedSources) {
            this.predefinedSources = Optional.ofNullable(predefinedSources);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "predefined_sources", nulls = Nulls.SKIP)
        public _FinalStage predefinedSources(Optional<PredefinedSources> predefinedSources) {
            this.predefinedSources = predefinedSources;
            return this;
        }

        @java.lang.Override
        public _FinalStage searchIn(String searchIn) {
            this.searchIn = Optional.ofNullable(searchIn);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "search_in", nulls = Nulls.SKIP)
        public _FinalStage searchIn(Optional<String> searchIn) {
            this.searchIn = searchIn;
            return this;
        }

        @java.lang.Override
        public _FinalStage aggregationBy(AggregationBy aggregationBy) {
            this.aggregationBy = Optional.ofNullable(aggregationBy);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "aggregation_by", nulls = Nulls.SKIP)
        public _FinalStage aggregationBy(Optional<AggregationBy> aggregationBy) {
            this.aggregationBy = aggregationBy;
            return this;
        }

        @java.lang.Override
        public AggregationPostRequest build() {
            return new AggregationPostRequest(
                    q,
                    aggregationBy,
                    searchIn,
                    predefinedSources,
                    sources,
                    notSources,
                    lang,
                    notLang,
                    countries,
                    notCountries,
                    notAuthorName,
                    from,
                    to,
                    publishedDatePrecision,
                    byParseDate,
                    sortBy,
                    rankedOnly,
                    fromRank,
                    toRank,
                    isHeadline,
                    isOpinion,
                    isPaidContent,
                    parentUrl,
                    allLinks,
                    allDomainLinks,
                    wordCountMin,
                    wordCountMax,
                    page,
                    pageSize,
                    includeNlpData,
                    hasNlp,
                    theme,
                    notTheme,
                    orgEntityName,
                    perEntityName,
                    locEntityName,
                    miscEntityName,
                    titleSentimentMin,
                    titleSentimentMax,
                    contentSentimentMin,
                    contentSentimentMax,
                    iptcTags,
                    notIptcTags,
                    robotsCompliant,
                    additionalProperties);
        }
    }
}
