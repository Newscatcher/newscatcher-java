/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.newscatcher.api;

import com.newscatcher.api.core.ClientOptions;
import com.newscatcher.api.core.Suppliers;
import com.newscatcher.api.resources.aggregation.AsyncAggregationClient;
import com.newscatcher.api.resources.authors.AsyncAuthorsClient;
import com.newscatcher.api.resources.breakingnews.AsyncBreakingNewsClient;
import com.newscatcher.api.resources.latestheadlines.AsyncLatestheadlinesClient;
import com.newscatcher.api.resources.search.AsyncSearchClient;
import com.newscatcher.api.resources.searchlink.AsyncSearchLinkClient;
import com.newscatcher.api.resources.searchsimilar.AsyncSearchsimilarClient;
import com.newscatcher.api.resources.sources.AsyncSourcesClient;
import com.newscatcher.api.resources.subscription.AsyncSubscriptionClient;
import java.util.function.Supplier;

public class AsyncNewscatcherApiClient {
    protected final ClientOptions clientOptions;

    protected final Supplier<AsyncSearchClient> searchClient;

    protected final Supplier<AsyncLatestheadlinesClient> latestheadlinesClient;

    protected final Supplier<AsyncBreakingNewsClient> breakingNewsClient;

    protected final Supplier<AsyncAuthorsClient> authorsClient;

    protected final Supplier<AsyncSearchLinkClient> searchLinkClient;

    protected final Supplier<AsyncSearchsimilarClient> searchsimilarClient;

    protected final Supplier<AsyncSourcesClient> sourcesClient;

    protected final Supplier<AsyncAggregationClient> aggregationClient;

    protected final Supplier<AsyncSubscriptionClient> subscriptionClient;

    public AsyncNewscatcherApiClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.searchClient = Suppliers.memoize(() -> new AsyncSearchClient(clientOptions));
        this.latestheadlinesClient = Suppliers.memoize(() -> new AsyncLatestheadlinesClient(clientOptions));
        this.breakingNewsClient = Suppliers.memoize(() -> new AsyncBreakingNewsClient(clientOptions));
        this.authorsClient = Suppliers.memoize(() -> new AsyncAuthorsClient(clientOptions));
        this.searchLinkClient = Suppliers.memoize(() -> new AsyncSearchLinkClient(clientOptions));
        this.searchsimilarClient = Suppliers.memoize(() -> new AsyncSearchsimilarClient(clientOptions));
        this.sourcesClient = Suppliers.memoize(() -> new AsyncSourcesClient(clientOptions));
        this.aggregationClient = Suppliers.memoize(() -> new AsyncAggregationClient(clientOptions));
        this.subscriptionClient = Suppliers.memoize(() -> new AsyncSubscriptionClient(clientOptions));
    }

    public AsyncSearchClient search() {
        return this.searchClient.get();
    }

    public AsyncLatestheadlinesClient latestheadlines() {
        return this.latestheadlinesClient.get();
    }

    public AsyncBreakingNewsClient breakingNews() {
        return this.breakingNewsClient.get();
    }

    public AsyncAuthorsClient authors() {
        return this.authorsClient.get();
    }

    public AsyncSearchLinkClient searchLink() {
        return this.searchLinkClient.get();
    }

    public AsyncSearchsimilarClient searchsimilar() {
        return this.searchsimilarClient.get();
    }

    public AsyncSourcesClient sources() {
        return this.sourcesClient.get();
    }

    public AsyncAggregationClient aggregation() {
        return this.aggregationClient.get();
    }

    public AsyncSubscriptionClient subscription() {
        return this.subscriptionClient.get();
    }

    public static AsyncNewscatcherApiClientBuilder builder() {
        return new AsyncNewscatcherApiClientBuilder();
    }
}
