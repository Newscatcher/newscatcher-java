/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.newscatcher.api.resources.search.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.newscatcher.api.core.ObjectMappers;
import com.newscatcher.api.resources.search.types.SearchRequestByParseDate;
import com.newscatcher.api.resources.search.types.SearchRequestClusteringEnabled;
import com.newscatcher.api.resources.search.types.SearchRequestClusteringThreshold;
import com.newscatcher.api.resources.search.types.SearchRequestFrom;
import com.newscatcher.api.resources.search.types.SearchRequestFromRank;
import com.newscatcher.api.resources.search.types.SearchRequestIncludeNlpData;
import com.newscatcher.api.resources.search.types.SearchRequestIsHeadline;
import com.newscatcher.api.resources.search.types.SearchRequestIsOpinion;
import com.newscatcher.api.resources.search.types.SearchRequestIsPaidContent;
import com.newscatcher.api.resources.search.types.SearchRequestPage;
import com.newscatcher.api.resources.search.types.SearchRequestPageSize;
import com.newscatcher.api.resources.search.types.SearchRequestRankedOnly;
import com.newscatcher.api.resources.search.types.SearchRequestTo;
import com.newscatcher.api.resources.search.types.SearchRequestToRank;
import com.newscatcher.api.resources.search.types.SearchRequestWordCountMax;
import com.newscatcher.api.resources.search.types.SearchRequestWordCountMin;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = SearchRequest.Builder.class)
public final class SearchRequest {
    private final String q;

    private final Optional<String> searchIn;

    private final Optional<Object> predefinedSources;

    private final Optional<Object> sources;

    private final Optional<Object> notSources;

    private final Optional<Object> lang;

    private final Optional<Object> notLang;

    private final Optional<Object> countries;

    private final Optional<Object> notCountries;

    private final Optional<Object> notAuthorName;

    private final Optional<SearchRequestFrom> from;

    private final Optional<SearchRequestTo> to;

    private final Optional<String> publishedDatePrecision;

    private final Optional<SearchRequestByParseDate> byParseDate;

    private final Optional<String> sortBy;

    private final Optional<SearchRequestRankedOnly> rankedOnly;

    private final Optional<SearchRequestFromRank> fromRank;

    private final Optional<SearchRequestToRank> toRank;

    private final Optional<SearchRequestIsHeadline> isHeadline;

    private final Optional<SearchRequestIsOpinion> isOpinion;

    private final Optional<SearchRequestIsPaidContent> isPaidContent;

    private final Optional<Object> parentUrl;

    private final Optional<Object> allLinks;

    private final Optional<Object> allDomainLinks;

    private final Optional<SearchRequestWordCountMin> wordCountMin;

    private final Optional<SearchRequestWordCountMax> wordCountMax;

    private final Optional<SearchRequestPage> page;

    private final Optional<SearchRequestPageSize> pageSize;

    private final Optional<String> clusteringVariable;

    private final Optional<SearchRequestClusteringEnabled> clusteringEnabled;

    private final Optional<SearchRequestClusteringThreshold> clusteringThreshold;

    private final Optional<SearchRequestIncludeNlpData> includeNlpData;

    private final Optional<Boolean> hasNlp;

    private final Optional<String> theme;

    private final Optional<String> notTheme;

    private final Optional<String> orgEntityName;

    private final Optional<String> perEntityName;

    private final Optional<String> locEntityName;

    private final Optional<String> miscEntityName;

    private final Optional<Double> titleSentimentMin;

    private final Optional<Double> titleSentimentMax;

    private final Optional<Double> contentSentimentMin;

    private final Optional<Double> contentSentimentMax;

    private final Optional<Object> iptcTags;

    private final Optional<Object> notIptcTags;

    private final Optional<Object> sourceName;

    private final Optional<Object> iabTags;

    private final Optional<Object> notIabTags;

    private final Optional<Boolean> excludeDuplicates;

    private final Optional<Boolean> additionalDomainInfo;

    private final Optional<Boolean> isNewsDomain;

    private final Optional<Object> newsDomainType;

    private final Optional<Object> newsType;

    private final Map<String, Object> additionalProperties;

    private SearchRequest(
            String q,
            Optional<String> searchIn,
            Optional<Object> predefinedSources,
            Optional<Object> sources,
            Optional<Object> notSources,
            Optional<Object> lang,
            Optional<Object> notLang,
            Optional<Object> countries,
            Optional<Object> notCountries,
            Optional<Object> notAuthorName,
            Optional<SearchRequestFrom> from,
            Optional<SearchRequestTo> to,
            Optional<String> publishedDatePrecision,
            Optional<SearchRequestByParseDate> byParseDate,
            Optional<String> sortBy,
            Optional<SearchRequestRankedOnly> rankedOnly,
            Optional<SearchRequestFromRank> fromRank,
            Optional<SearchRequestToRank> toRank,
            Optional<SearchRequestIsHeadline> isHeadline,
            Optional<SearchRequestIsOpinion> isOpinion,
            Optional<SearchRequestIsPaidContent> isPaidContent,
            Optional<Object> parentUrl,
            Optional<Object> allLinks,
            Optional<Object> allDomainLinks,
            Optional<SearchRequestWordCountMin> wordCountMin,
            Optional<SearchRequestWordCountMax> wordCountMax,
            Optional<SearchRequestPage> page,
            Optional<SearchRequestPageSize> pageSize,
            Optional<String> clusteringVariable,
            Optional<SearchRequestClusteringEnabled> clusteringEnabled,
            Optional<SearchRequestClusteringThreshold> clusteringThreshold,
            Optional<SearchRequestIncludeNlpData> includeNlpData,
            Optional<Boolean> hasNlp,
            Optional<String> theme,
            Optional<String> notTheme,
            Optional<String> orgEntityName,
            Optional<String> perEntityName,
            Optional<String> locEntityName,
            Optional<String> miscEntityName,
            Optional<Double> titleSentimentMin,
            Optional<Double> titleSentimentMax,
            Optional<Double> contentSentimentMin,
            Optional<Double> contentSentimentMax,
            Optional<Object> iptcTags,
            Optional<Object> notIptcTags,
            Optional<Object> sourceName,
            Optional<Object> iabTags,
            Optional<Object> notIabTags,
            Optional<Boolean> excludeDuplicates,
            Optional<Boolean> additionalDomainInfo,
            Optional<Boolean> isNewsDomain,
            Optional<Object> newsDomainType,
            Optional<Object> newsType,
            Map<String, Object> additionalProperties) {
        this.q = q;
        this.searchIn = searchIn;
        this.predefinedSources = predefinedSources;
        this.sources = sources;
        this.notSources = notSources;
        this.lang = lang;
        this.notLang = notLang;
        this.countries = countries;
        this.notCountries = notCountries;
        this.notAuthorName = notAuthorName;
        this.from = from;
        this.to = to;
        this.publishedDatePrecision = publishedDatePrecision;
        this.byParseDate = byParseDate;
        this.sortBy = sortBy;
        this.rankedOnly = rankedOnly;
        this.fromRank = fromRank;
        this.toRank = toRank;
        this.isHeadline = isHeadline;
        this.isOpinion = isOpinion;
        this.isPaidContent = isPaidContent;
        this.parentUrl = parentUrl;
        this.allLinks = allLinks;
        this.allDomainLinks = allDomainLinks;
        this.wordCountMin = wordCountMin;
        this.wordCountMax = wordCountMax;
        this.page = page;
        this.pageSize = pageSize;
        this.clusteringVariable = clusteringVariable;
        this.clusteringEnabled = clusteringEnabled;
        this.clusteringThreshold = clusteringThreshold;
        this.includeNlpData = includeNlpData;
        this.hasNlp = hasNlp;
        this.theme = theme;
        this.notTheme = notTheme;
        this.orgEntityName = orgEntityName;
        this.perEntityName = perEntityName;
        this.locEntityName = locEntityName;
        this.miscEntityName = miscEntityName;
        this.titleSentimentMin = titleSentimentMin;
        this.titleSentimentMax = titleSentimentMax;
        this.contentSentimentMin = contentSentimentMin;
        this.contentSentimentMax = contentSentimentMax;
        this.iptcTags = iptcTags;
        this.notIptcTags = notIptcTags;
        this.sourceName = sourceName;
        this.iabTags = iabTags;
        this.notIabTags = notIabTags;
        this.excludeDuplicates = excludeDuplicates;
        this.additionalDomainInfo = additionalDomainInfo;
        this.isNewsDomain = isNewsDomain;
        this.newsDomainType = newsDomainType;
        this.newsType = newsType;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("q")
    public String getQ() {
        return q;
    }

    @JsonProperty("search_in")
    public Optional<String> getSearchIn() {
        return searchIn;
    }

    @JsonProperty("predefined_sources")
    public Optional<Object> getPredefinedSources() {
        return predefinedSources;
    }

    @JsonProperty("sources")
    public Optional<Object> getSources() {
        return sources;
    }

    @JsonProperty("not_sources")
    public Optional<Object> getNotSources() {
        return notSources;
    }

    @JsonProperty("lang")
    public Optional<Object> getLang() {
        return lang;
    }

    @JsonProperty("not_lang")
    public Optional<Object> getNotLang() {
        return notLang;
    }

    @JsonProperty("countries")
    public Optional<Object> getCountries() {
        return countries;
    }

    @JsonProperty("not_countries")
    public Optional<Object> getNotCountries() {
        return notCountries;
    }

    @JsonProperty("not_author_name")
    public Optional<Object> getNotAuthorName() {
        return notAuthorName;
    }

    @JsonProperty("from_")
    public Optional<SearchRequestFrom> getFrom() {
        return from;
    }

    @JsonProperty("to_")
    public Optional<SearchRequestTo> getTo() {
        return to;
    }

    @JsonProperty("published_date_precision")
    public Optional<String> getPublishedDatePrecision() {
        return publishedDatePrecision;
    }

    @JsonProperty("by_parse_date")
    public Optional<SearchRequestByParseDate> getByParseDate() {
        return byParseDate;
    }

    @JsonProperty("sort_by")
    public Optional<String> getSortBy() {
        return sortBy;
    }

    @JsonProperty("ranked_only")
    public Optional<SearchRequestRankedOnly> getRankedOnly() {
        return rankedOnly;
    }

    @JsonProperty("from_rank")
    public Optional<SearchRequestFromRank> getFromRank() {
        return fromRank;
    }

    @JsonProperty("to_rank")
    public Optional<SearchRequestToRank> getToRank() {
        return toRank;
    }

    @JsonProperty("is_headline")
    public Optional<SearchRequestIsHeadline> getIsHeadline() {
        return isHeadline;
    }

    @JsonProperty("is_opinion")
    public Optional<SearchRequestIsOpinion> getIsOpinion() {
        return isOpinion;
    }

    @JsonProperty("is_paid_content")
    public Optional<SearchRequestIsPaidContent> getIsPaidContent() {
        return isPaidContent;
    }

    @JsonProperty("parent_url")
    public Optional<Object> getParentUrl() {
        return parentUrl;
    }

    @JsonProperty("all_links")
    public Optional<Object> getAllLinks() {
        return allLinks;
    }

    @JsonProperty("all_domain_links")
    public Optional<Object> getAllDomainLinks() {
        return allDomainLinks;
    }

    @JsonProperty("word_count_min")
    public Optional<SearchRequestWordCountMin> getWordCountMin() {
        return wordCountMin;
    }

    @JsonProperty("word_count_max")
    public Optional<SearchRequestWordCountMax> getWordCountMax() {
        return wordCountMax;
    }

    @JsonProperty("page")
    public Optional<SearchRequestPage> getPage() {
        return page;
    }

    @JsonProperty("page_size")
    public Optional<SearchRequestPageSize> getPageSize() {
        return pageSize;
    }

    @JsonProperty("clustering_variable")
    public Optional<String> getClusteringVariable() {
        return clusteringVariable;
    }

    @JsonProperty("clustering_enabled")
    public Optional<SearchRequestClusteringEnabled> getClusteringEnabled() {
        return clusteringEnabled;
    }

    @JsonProperty("clustering_threshold")
    public Optional<SearchRequestClusteringThreshold> getClusteringThreshold() {
        return clusteringThreshold;
    }

    @JsonProperty("include_nlp_data")
    public Optional<SearchRequestIncludeNlpData> getIncludeNlpData() {
        return includeNlpData;
    }

    @JsonProperty("has_nlp")
    public Optional<Boolean> getHasNlp() {
        return hasNlp;
    }

    @JsonProperty("theme")
    public Optional<String> getTheme() {
        return theme;
    }

    @JsonProperty("not_theme")
    public Optional<String> getNotTheme() {
        return notTheme;
    }

    @JsonProperty("ORG_entity_name")
    public Optional<String> getOrgEntityName() {
        return orgEntityName;
    }

    @JsonProperty("PER_entity_name")
    public Optional<String> getPerEntityName() {
        return perEntityName;
    }

    @JsonProperty("LOC_entity_name")
    public Optional<String> getLocEntityName() {
        return locEntityName;
    }

    @JsonProperty("MISC_entity_name")
    public Optional<String> getMiscEntityName() {
        return miscEntityName;
    }

    @JsonProperty("title_sentiment_min")
    public Optional<Double> getTitleSentimentMin() {
        return titleSentimentMin;
    }

    @JsonProperty("title_sentiment_max")
    public Optional<Double> getTitleSentimentMax() {
        return titleSentimentMax;
    }

    @JsonProperty("content_sentiment_min")
    public Optional<Double> getContentSentimentMin() {
        return contentSentimentMin;
    }

    @JsonProperty("content_sentiment_max")
    public Optional<Double> getContentSentimentMax() {
        return contentSentimentMax;
    }

    @JsonProperty("iptc_tags")
    public Optional<Object> getIptcTags() {
        return iptcTags;
    }

    @JsonProperty("not_iptc_tags")
    public Optional<Object> getNotIptcTags() {
        return notIptcTags;
    }

    @JsonProperty("source_name")
    public Optional<Object> getSourceName() {
        return sourceName;
    }

    @JsonProperty("iab_tags")
    public Optional<Object> getIabTags() {
        return iabTags;
    }

    @JsonProperty("not_iab_tags")
    public Optional<Object> getNotIabTags() {
        return notIabTags;
    }

    @JsonProperty("exclude_duplicates")
    public Optional<Boolean> getExcludeDuplicates() {
        return excludeDuplicates;
    }

    @JsonProperty("additional_domain_info")
    public Optional<Boolean> getAdditionalDomainInfo() {
        return additionalDomainInfo;
    }

    @JsonProperty("is_news_domain")
    public Optional<Boolean> getIsNewsDomain() {
        return isNewsDomain;
    }

    @JsonProperty("news_domain_type")
    public Optional<Object> getNewsDomainType() {
        return newsDomainType;
    }

    @JsonProperty("news_type")
    public Optional<Object> getNewsType() {
        return newsType;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof SearchRequest && equalTo((SearchRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(SearchRequest other) {
        return q.equals(other.q)
                && searchIn.equals(other.searchIn)
                && predefinedSources.equals(other.predefinedSources)
                && sources.equals(other.sources)
                && notSources.equals(other.notSources)
                && lang.equals(other.lang)
                && notLang.equals(other.notLang)
                && countries.equals(other.countries)
                && notCountries.equals(other.notCountries)
                && notAuthorName.equals(other.notAuthorName)
                && from.equals(other.from)
                && to.equals(other.to)
                && publishedDatePrecision.equals(other.publishedDatePrecision)
                && byParseDate.equals(other.byParseDate)
                && sortBy.equals(other.sortBy)
                && rankedOnly.equals(other.rankedOnly)
                && fromRank.equals(other.fromRank)
                && toRank.equals(other.toRank)
                && isHeadline.equals(other.isHeadline)
                && isOpinion.equals(other.isOpinion)
                && isPaidContent.equals(other.isPaidContent)
                && parentUrl.equals(other.parentUrl)
                && allLinks.equals(other.allLinks)
                && allDomainLinks.equals(other.allDomainLinks)
                && wordCountMin.equals(other.wordCountMin)
                && wordCountMax.equals(other.wordCountMax)
                && page.equals(other.page)
                && pageSize.equals(other.pageSize)
                && clusteringVariable.equals(other.clusteringVariable)
                && clusteringEnabled.equals(other.clusteringEnabled)
                && clusteringThreshold.equals(other.clusteringThreshold)
                && includeNlpData.equals(other.includeNlpData)
                && hasNlp.equals(other.hasNlp)
                && theme.equals(other.theme)
                && notTheme.equals(other.notTheme)
                && orgEntityName.equals(other.orgEntityName)
                && perEntityName.equals(other.perEntityName)
                && locEntityName.equals(other.locEntityName)
                && miscEntityName.equals(other.miscEntityName)
                && titleSentimentMin.equals(other.titleSentimentMin)
                && titleSentimentMax.equals(other.titleSentimentMax)
                && contentSentimentMin.equals(other.contentSentimentMin)
                && contentSentimentMax.equals(other.contentSentimentMax)
                && iptcTags.equals(other.iptcTags)
                && notIptcTags.equals(other.notIptcTags)
                && sourceName.equals(other.sourceName)
                && iabTags.equals(other.iabTags)
                && notIabTags.equals(other.notIabTags)
                && excludeDuplicates.equals(other.excludeDuplicates)
                && additionalDomainInfo.equals(other.additionalDomainInfo)
                && isNewsDomain.equals(other.isNewsDomain)
                && newsDomainType.equals(other.newsDomainType)
                && newsType.equals(other.newsType);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.q,
                this.searchIn,
                this.predefinedSources,
                this.sources,
                this.notSources,
                this.lang,
                this.notLang,
                this.countries,
                this.notCountries,
                this.notAuthorName,
                this.from,
                this.to,
                this.publishedDatePrecision,
                this.byParseDate,
                this.sortBy,
                this.rankedOnly,
                this.fromRank,
                this.toRank,
                this.isHeadline,
                this.isOpinion,
                this.isPaidContent,
                this.parentUrl,
                this.allLinks,
                this.allDomainLinks,
                this.wordCountMin,
                this.wordCountMax,
                this.page,
                this.pageSize,
                this.clusteringVariable,
                this.clusteringEnabled,
                this.clusteringThreshold,
                this.includeNlpData,
                this.hasNlp,
                this.theme,
                this.notTheme,
                this.orgEntityName,
                this.perEntityName,
                this.locEntityName,
                this.miscEntityName,
                this.titleSentimentMin,
                this.titleSentimentMax,
                this.contentSentimentMin,
                this.contentSentimentMax,
                this.iptcTags,
                this.notIptcTags,
                this.sourceName,
                this.iabTags,
                this.notIabTags,
                this.excludeDuplicates,
                this.additionalDomainInfo,
                this.isNewsDomain,
                this.newsDomainType,
                this.newsType);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static QStage builder() {
        return new Builder();
    }

    public interface QStage {
        _FinalStage q(@NotNull String q);

        Builder from(SearchRequest other);
    }

    public interface _FinalStage {
        SearchRequest build();

        _FinalStage searchIn(Optional<String> searchIn);

        _FinalStage searchIn(String searchIn);

        _FinalStage predefinedSources(Optional<Object> predefinedSources);

        _FinalStage predefinedSources(Object predefinedSources);

        _FinalStage sources(Optional<Object> sources);

        _FinalStage sources(Object sources);

        _FinalStage notSources(Optional<Object> notSources);

        _FinalStage notSources(Object notSources);

        _FinalStage lang(Optional<Object> lang);

        _FinalStage lang(Object lang);

        _FinalStage notLang(Optional<Object> notLang);

        _FinalStage notLang(Object notLang);

        _FinalStage countries(Optional<Object> countries);

        _FinalStage countries(Object countries);

        _FinalStage notCountries(Optional<Object> notCountries);

        _FinalStage notCountries(Object notCountries);

        _FinalStage notAuthorName(Optional<Object> notAuthorName);

        _FinalStage notAuthorName(Object notAuthorName);

        _FinalStage from(Optional<SearchRequestFrom> from);

        _FinalStage from(SearchRequestFrom from);

        _FinalStage to(Optional<SearchRequestTo> to);

        _FinalStage to(SearchRequestTo to);

        _FinalStage publishedDatePrecision(Optional<String> publishedDatePrecision);

        _FinalStage publishedDatePrecision(String publishedDatePrecision);

        _FinalStage byParseDate(Optional<SearchRequestByParseDate> byParseDate);

        _FinalStage byParseDate(SearchRequestByParseDate byParseDate);

        _FinalStage sortBy(Optional<String> sortBy);

        _FinalStage sortBy(String sortBy);

        _FinalStage rankedOnly(Optional<SearchRequestRankedOnly> rankedOnly);

        _FinalStage rankedOnly(SearchRequestRankedOnly rankedOnly);

        _FinalStage fromRank(Optional<SearchRequestFromRank> fromRank);

        _FinalStage fromRank(SearchRequestFromRank fromRank);

        _FinalStage toRank(Optional<SearchRequestToRank> toRank);

        _FinalStage toRank(SearchRequestToRank toRank);

        _FinalStage isHeadline(Optional<SearchRequestIsHeadline> isHeadline);

        _FinalStage isHeadline(SearchRequestIsHeadline isHeadline);

        _FinalStage isOpinion(Optional<SearchRequestIsOpinion> isOpinion);

        _FinalStage isOpinion(SearchRequestIsOpinion isOpinion);

        _FinalStage isPaidContent(Optional<SearchRequestIsPaidContent> isPaidContent);

        _FinalStage isPaidContent(SearchRequestIsPaidContent isPaidContent);

        _FinalStage parentUrl(Optional<Object> parentUrl);

        _FinalStage parentUrl(Object parentUrl);

        _FinalStage allLinks(Optional<Object> allLinks);

        _FinalStage allLinks(Object allLinks);

        _FinalStage allDomainLinks(Optional<Object> allDomainLinks);

        _FinalStage allDomainLinks(Object allDomainLinks);

        _FinalStage wordCountMin(Optional<SearchRequestWordCountMin> wordCountMin);

        _FinalStage wordCountMin(SearchRequestWordCountMin wordCountMin);

        _FinalStage wordCountMax(Optional<SearchRequestWordCountMax> wordCountMax);

        _FinalStage wordCountMax(SearchRequestWordCountMax wordCountMax);

        _FinalStage page(Optional<SearchRequestPage> page);

        _FinalStage page(SearchRequestPage page);

        _FinalStage pageSize(Optional<SearchRequestPageSize> pageSize);

        _FinalStage pageSize(SearchRequestPageSize pageSize);

        _FinalStage clusteringVariable(Optional<String> clusteringVariable);

        _FinalStage clusteringVariable(String clusteringVariable);

        _FinalStage clusteringEnabled(Optional<SearchRequestClusteringEnabled> clusteringEnabled);

        _FinalStage clusteringEnabled(SearchRequestClusteringEnabled clusteringEnabled);

        _FinalStage clusteringThreshold(Optional<SearchRequestClusteringThreshold> clusteringThreshold);

        _FinalStage clusteringThreshold(SearchRequestClusteringThreshold clusteringThreshold);

        _FinalStage includeNlpData(Optional<SearchRequestIncludeNlpData> includeNlpData);

        _FinalStage includeNlpData(SearchRequestIncludeNlpData includeNlpData);

        _FinalStage hasNlp(Optional<Boolean> hasNlp);

        _FinalStage hasNlp(Boolean hasNlp);

        _FinalStage theme(Optional<String> theme);

        _FinalStage theme(String theme);

        _FinalStage notTheme(Optional<String> notTheme);

        _FinalStage notTheme(String notTheme);

        _FinalStage orgEntityName(Optional<String> orgEntityName);

        _FinalStage orgEntityName(String orgEntityName);

        _FinalStage perEntityName(Optional<String> perEntityName);

        _FinalStage perEntityName(String perEntityName);

        _FinalStage locEntityName(Optional<String> locEntityName);

        _FinalStage locEntityName(String locEntityName);

        _FinalStage miscEntityName(Optional<String> miscEntityName);

        _FinalStage miscEntityName(String miscEntityName);

        _FinalStage titleSentimentMin(Optional<Double> titleSentimentMin);

        _FinalStage titleSentimentMin(Double titleSentimentMin);

        _FinalStage titleSentimentMax(Optional<Double> titleSentimentMax);

        _FinalStage titleSentimentMax(Double titleSentimentMax);

        _FinalStage contentSentimentMin(Optional<Double> contentSentimentMin);

        _FinalStage contentSentimentMin(Double contentSentimentMin);

        _FinalStage contentSentimentMax(Optional<Double> contentSentimentMax);

        _FinalStage contentSentimentMax(Double contentSentimentMax);

        _FinalStage iptcTags(Optional<Object> iptcTags);

        _FinalStage iptcTags(Object iptcTags);

        _FinalStage notIptcTags(Optional<Object> notIptcTags);

        _FinalStage notIptcTags(Object notIptcTags);

        _FinalStage sourceName(Optional<Object> sourceName);

        _FinalStage sourceName(Object sourceName);

        _FinalStage iabTags(Optional<Object> iabTags);

        _FinalStage iabTags(Object iabTags);

        _FinalStage notIabTags(Optional<Object> notIabTags);

        _FinalStage notIabTags(Object notIabTags);

        _FinalStage excludeDuplicates(Optional<Boolean> excludeDuplicates);

        _FinalStage excludeDuplicates(Boolean excludeDuplicates);

        _FinalStage additionalDomainInfo(Optional<Boolean> additionalDomainInfo);

        _FinalStage additionalDomainInfo(Boolean additionalDomainInfo);

        _FinalStage isNewsDomain(Optional<Boolean> isNewsDomain);

        _FinalStage isNewsDomain(Boolean isNewsDomain);

        _FinalStage newsDomainType(Optional<Object> newsDomainType);

        _FinalStage newsDomainType(Object newsDomainType);

        _FinalStage newsType(Optional<Object> newsType);

        _FinalStage newsType(Object newsType);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements QStage, _FinalStage {
        private String q;

        private Optional<Object> newsType = Optional.empty();

        private Optional<Object> newsDomainType = Optional.empty();

        private Optional<Boolean> isNewsDomain = Optional.empty();

        private Optional<Boolean> additionalDomainInfo = Optional.empty();

        private Optional<Boolean> excludeDuplicates = Optional.empty();

        private Optional<Object> notIabTags = Optional.empty();

        private Optional<Object> iabTags = Optional.empty();

        private Optional<Object> sourceName = Optional.empty();

        private Optional<Object> notIptcTags = Optional.empty();

        private Optional<Object> iptcTags = Optional.empty();

        private Optional<Double> contentSentimentMax = Optional.empty();

        private Optional<Double> contentSentimentMin = Optional.empty();

        private Optional<Double> titleSentimentMax = Optional.empty();

        private Optional<Double> titleSentimentMin = Optional.empty();

        private Optional<String> miscEntityName = Optional.empty();

        private Optional<String> locEntityName = Optional.empty();

        private Optional<String> perEntityName = Optional.empty();

        private Optional<String> orgEntityName = Optional.empty();

        private Optional<String> notTheme = Optional.empty();

        private Optional<String> theme = Optional.empty();

        private Optional<Boolean> hasNlp = Optional.empty();

        private Optional<SearchRequestIncludeNlpData> includeNlpData = Optional.empty();

        private Optional<SearchRequestClusteringThreshold> clusteringThreshold = Optional.empty();

        private Optional<SearchRequestClusteringEnabled> clusteringEnabled = Optional.empty();

        private Optional<String> clusteringVariable = Optional.empty();

        private Optional<SearchRequestPageSize> pageSize = Optional.empty();

        private Optional<SearchRequestPage> page = Optional.empty();

        private Optional<SearchRequestWordCountMax> wordCountMax = Optional.empty();

        private Optional<SearchRequestWordCountMin> wordCountMin = Optional.empty();

        private Optional<Object> allDomainLinks = Optional.empty();

        private Optional<Object> allLinks = Optional.empty();

        private Optional<Object> parentUrl = Optional.empty();

        private Optional<SearchRequestIsPaidContent> isPaidContent = Optional.empty();

        private Optional<SearchRequestIsOpinion> isOpinion = Optional.empty();

        private Optional<SearchRequestIsHeadline> isHeadline = Optional.empty();

        private Optional<SearchRequestToRank> toRank = Optional.empty();

        private Optional<SearchRequestFromRank> fromRank = Optional.empty();

        private Optional<SearchRequestRankedOnly> rankedOnly = Optional.empty();

        private Optional<String> sortBy = Optional.empty();

        private Optional<SearchRequestByParseDate> byParseDate = Optional.empty();

        private Optional<String> publishedDatePrecision = Optional.empty();

        private Optional<SearchRequestTo> to = Optional.empty();

        private Optional<SearchRequestFrom> from = Optional.empty();

        private Optional<Object> notAuthorName = Optional.empty();

        private Optional<Object> notCountries = Optional.empty();

        private Optional<Object> countries = Optional.empty();

        private Optional<Object> notLang = Optional.empty();

        private Optional<Object> lang = Optional.empty();

        private Optional<Object> notSources = Optional.empty();

        private Optional<Object> sources = Optional.empty();

        private Optional<Object> predefinedSources = Optional.empty();

        private Optional<String> searchIn = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(SearchRequest other) {
            q(other.getQ());
            searchIn(other.getSearchIn());
            predefinedSources(other.getPredefinedSources());
            sources(other.getSources());
            notSources(other.getNotSources());
            lang(other.getLang());
            notLang(other.getNotLang());
            countries(other.getCountries());
            notCountries(other.getNotCountries());
            notAuthorName(other.getNotAuthorName());
            from(other.getFrom());
            to(other.getTo());
            publishedDatePrecision(other.getPublishedDatePrecision());
            byParseDate(other.getByParseDate());
            sortBy(other.getSortBy());
            rankedOnly(other.getRankedOnly());
            fromRank(other.getFromRank());
            toRank(other.getToRank());
            isHeadline(other.getIsHeadline());
            isOpinion(other.getIsOpinion());
            isPaidContent(other.getIsPaidContent());
            parentUrl(other.getParentUrl());
            allLinks(other.getAllLinks());
            allDomainLinks(other.getAllDomainLinks());
            wordCountMin(other.getWordCountMin());
            wordCountMax(other.getWordCountMax());
            page(other.getPage());
            pageSize(other.getPageSize());
            clusteringVariable(other.getClusteringVariable());
            clusteringEnabled(other.getClusteringEnabled());
            clusteringThreshold(other.getClusteringThreshold());
            includeNlpData(other.getIncludeNlpData());
            hasNlp(other.getHasNlp());
            theme(other.getTheme());
            notTheme(other.getNotTheme());
            orgEntityName(other.getOrgEntityName());
            perEntityName(other.getPerEntityName());
            locEntityName(other.getLocEntityName());
            miscEntityName(other.getMiscEntityName());
            titleSentimentMin(other.getTitleSentimentMin());
            titleSentimentMax(other.getTitleSentimentMax());
            contentSentimentMin(other.getContentSentimentMin());
            contentSentimentMax(other.getContentSentimentMax());
            iptcTags(other.getIptcTags());
            notIptcTags(other.getNotIptcTags());
            sourceName(other.getSourceName());
            iabTags(other.getIabTags());
            notIabTags(other.getNotIabTags());
            excludeDuplicates(other.getExcludeDuplicates());
            additionalDomainInfo(other.getAdditionalDomainInfo());
            isNewsDomain(other.getIsNewsDomain());
            newsDomainType(other.getNewsDomainType());
            newsType(other.getNewsType());
            return this;
        }

        @java.lang.Override
        @JsonSetter("q")
        public _FinalStage q(@NotNull String q) {
            this.q = Objects.requireNonNull(q, "q must not be null");
            return this;
        }

        @java.lang.Override
        public _FinalStage newsType(Object newsType) {
            this.newsType = Optional.ofNullable(newsType);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "news_type", nulls = Nulls.SKIP)
        public _FinalStage newsType(Optional<Object> newsType) {
            this.newsType = newsType;
            return this;
        }

        @java.lang.Override
        public _FinalStage newsDomainType(Object newsDomainType) {
            this.newsDomainType = Optional.ofNullable(newsDomainType);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "news_domain_type", nulls = Nulls.SKIP)
        public _FinalStage newsDomainType(Optional<Object> newsDomainType) {
            this.newsDomainType = newsDomainType;
            return this;
        }

        @java.lang.Override
        public _FinalStage isNewsDomain(Boolean isNewsDomain) {
            this.isNewsDomain = Optional.ofNullable(isNewsDomain);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "is_news_domain", nulls = Nulls.SKIP)
        public _FinalStage isNewsDomain(Optional<Boolean> isNewsDomain) {
            this.isNewsDomain = isNewsDomain;
            return this;
        }

        @java.lang.Override
        public _FinalStage additionalDomainInfo(Boolean additionalDomainInfo) {
            this.additionalDomainInfo = Optional.ofNullable(additionalDomainInfo);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "additional_domain_info", nulls = Nulls.SKIP)
        public _FinalStage additionalDomainInfo(Optional<Boolean> additionalDomainInfo) {
            this.additionalDomainInfo = additionalDomainInfo;
            return this;
        }

        @java.lang.Override
        public _FinalStage excludeDuplicates(Boolean excludeDuplicates) {
            this.excludeDuplicates = Optional.ofNullable(excludeDuplicates);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "exclude_duplicates", nulls = Nulls.SKIP)
        public _FinalStage excludeDuplicates(Optional<Boolean> excludeDuplicates) {
            this.excludeDuplicates = excludeDuplicates;
            return this;
        }

        @java.lang.Override
        public _FinalStage notIabTags(Object notIabTags) {
            this.notIabTags = Optional.ofNullable(notIabTags);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "not_iab_tags", nulls = Nulls.SKIP)
        public _FinalStage notIabTags(Optional<Object> notIabTags) {
            this.notIabTags = notIabTags;
            return this;
        }

        @java.lang.Override
        public _FinalStage iabTags(Object iabTags) {
            this.iabTags = Optional.ofNullable(iabTags);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "iab_tags", nulls = Nulls.SKIP)
        public _FinalStage iabTags(Optional<Object> iabTags) {
            this.iabTags = iabTags;
            return this;
        }

        @java.lang.Override
        public _FinalStage sourceName(Object sourceName) {
            this.sourceName = Optional.ofNullable(sourceName);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "source_name", nulls = Nulls.SKIP)
        public _FinalStage sourceName(Optional<Object> sourceName) {
            this.sourceName = sourceName;
            return this;
        }

        @java.lang.Override
        public _FinalStage notIptcTags(Object notIptcTags) {
            this.notIptcTags = Optional.ofNullable(notIptcTags);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "not_iptc_tags", nulls = Nulls.SKIP)
        public _FinalStage notIptcTags(Optional<Object> notIptcTags) {
            this.notIptcTags = notIptcTags;
            return this;
        }

        @java.lang.Override
        public _FinalStage iptcTags(Object iptcTags) {
            this.iptcTags = Optional.ofNullable(iptcTags);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "iptc_tags", nulls = Nulls.SKIP)
        public _FinalStage iptcTags(Optional<Object> iptcTags) {
            this.iptcTags = iptcTags;
            return this;
        }

        @java.lang.Override
        public _FinalStage contentSentimentMax(Double contentSentimentMax) {
            this.contentSentimentMax = Optional.ofNullable(contentSentimentMax);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "content_sentiment_max", nulls = Nulls.SKIP)
        public _FinalStage contentSentimentMax(Optional<Double> contentSentimentMax) {
            this.contentSentimentMax = contentSentimentMax;
            return this;
        }

        @java.lang.Override
        public _FinalStage contentSentimentMin(Double contentSentimentMin) {
            this.contentSentimentMin = Optional.ofNullable(contentSentimentMin);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "content_sentiment_min", nulls = Nulls.SKIP)
        public _FinalStage contentSentimentMin(Optional<Double> contentSentimentMin) {
            this.contentSentimentMin = contentSentimentMin;
            return this;
        }

        @java.lang.Override
        public _FinalStage titleSentimentMax(Double titleSentimentMax) {
            this.titleSentimentMax = Optional.ofNullable(titleSentimentMax);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "title_sentiment_max", nulls = Nulls.SKIP)
        public _FinalStage titleSentimentMax(Optional<Double> titleSentimentMax) {
            this.titleSentimentMax = titleSentimentMax;
            return this;
        }

        @java.lang.Override
        public _FinalStage titleSentimentMin(Double titleSentimentMin) {
            this.titleSentimentMin = Optional.ofNullable(titleSentimentMin);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "title_sentiment_min", nulls = Nulls.SKIP)
        public _FinalStage titleSentimentMin(Optional<Double> titleSentimentMin) {
            this.titleSentimentMin = titleSentimentMin;
            return this;
        }

        @java.lang.Override
        public _FinalStage miscEntityName(String miscEntityName) {
            this.miscEntityName = Optional.ofNullable(miscEntityName);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "MISC_entity_name", nulls = Nulls.SKIP)
        public _FinalStage miscEntityName(Optional<String> miscEntityName) {
            this.miscEntityName = miscEntityName;
            return this;
        }

        @java.lang.Override
        public _FinalStage locEntityName(String locEntityName) {
            this.locEntityName = Optional.ofNullable(locEntityName);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "LOC_entity_name", nulls = Nulls.SKIP)
        public _FinalStage locEntityName(Optional<String> locEntityName) {
            this.locEntityName = locEntityName;
            return this;
        }

        @java.lang.Override
        public _FinalStage perEntityName(String perEntityName) {
            this.perEntityName = Optional.ofNullable(perEntityName);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "PER_entity_name", nulls = Nulls.SKIP)
        public _FinalStage perEntityName(Optional<String> perEntityName) {
            this.perEntityName = perEntityName;
            return this;
        }

        @java.lang.Override
        public _FinalStage orgEntityName(String orgEntityName) {
            this.orgEntityName = Optional.ofNullable(orgEntityName);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "ORG_entity_name", nulls = Nulls.SKIP)
        public _FinalStage orgEntityName(Optional<String> orgEntityName) {
            this.orgEntityName = orgEntityName;
            return this;
        }

        @java.lang.Override
        public _FinalStage notTheme(String notTheme) {
            this.notTheme = Optional.ofNullable(notTheme);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "not_theme", nulls = Nulls.SKIP)
        public _FinalStage notTheme(Optional<String> notTheme) {
            this.notTheme = notTheme;
            return this;
        }

        @java.lang.Override
        public _FinalStage theme(String theme) {
            this.theme = Optional.ofNullable(theme);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "theme", nulls = Nulls.SKIP)
        public _FinalStage theme(Optional<String> theme) {
            this.theme = theme;
            return this;
        }

        @java.lang.Override
        public _FinalStage hasNlp(Boolean hasNlp) {
            this.hasNlp = Optional.ofNullable(hasNlp);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "has_nlp", nulls = Nulls.SKIP)
        public _FinalStage hasNlp(Optional<Boolean> hasNlp) {
            this.hasNlp = hasNlp;
            return this;
        }

        @java.lang.Override
        public _FinalStage includeNlpData(SearchRequestIncludeNlpData includeNlpData) {
            this.includeNlpData = Optional.ofNullable(includeNlpData);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "include_nlp_data", nulls = Nulls.SKIP)
        public _FinalStage includeNlpData(Optional<SearchRequestIncludeNlpData> includeNlpData) {
            this.includeNlpData = includeNlpData;
            return this;
        }

        @java.lang.Override
        public _FinalStage clusteringThreshold(SearchRequestClusteringThreshold clusteringThreshold) {
            this.clusteringThreshold = Optional.ofNullable(clusteringThreshold);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "clustering_threshold", nulls = Nulls.SKIP)
        public _FinalStage clusteringThreshold(Optional<SearchRequestClusteringThreshold> clusteringThreshold) {
            this.clusteringThreshold = clusteringThreshold;
            return this;
        }

        @java.lang.Override
        public _FinalStage clusteringEnabled(SearchRequestClusteringEnabled clusteringEnabled) {
            this.clusteringEnabled = Optional.ofNullable(clusteringEnabled);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "clustering_enabled", nulls = Nulls.SKIP)
        public _FinalStage clusteringEnabled(Optional<SearchRequestClusteringEnabled> clusteringEnabled) {
            this.clusteringEnabled = clusteringEnabled;
            return this;
        }

        @java.lang.Override
        public _FinalStage clusteringVariable(String clusteringVariable) {
            this.clusteringVariable = Optional.ofNullable(clusteringVariable);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "clustering_variable", nulls = Nulls.SKIP)
        public _FinalStage clusteringVariable(Optional<String> clusteringVariable) {
            this.clusteringVariable = clusteringVariable;
            return this;
        }

        @java.lang.Override
        public _FinalStage pageSize(SearchRequestPageSize pageSize) {
            this.pageSize = Optional.ofNullable(pageSize);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "page_size", nulls = Nulls.SKIP)
        public _FinalStage pageSize(Optional<SearchRequestPageSize> pageSize) {
            this.pageSize = pageSize;
            return this;
        }

        @java.lang.Override
        public _FinalStage page(SearchRequestPage page) {
            this.page = Optional.ofNullable(page);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "page", nulls = Nulls.SKIP)
        public _FinalStage page(Optional<SearchRequestPage> page) {
            this.page = page;
            return this;
        }

        @java.lang.Override
        public _FinalStage wordCountMax(SearchRequestWordCountMax wordCountMax) {
            this.wordCountMax = Optional.ofNullable(wordCountMax);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "word_count_max", nulls = Nulls.SKIP)
        public _FinalStage wordCountMax(Optional<SearchRequestWordCountMax> wordCountMax) {
            this.wordCountMax = wordCountMax;
            return this;
        }

        @java.lang.Override
        public _FinalStage wordCountMin(SearchRequestWordCountMin wordCountMin) {
            this.wordCountMin = Optional.ofNullable(wordCountMin);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "word_count_min", nulls = Nulls.SKIP)
        public _FinalStage wordCountMin(Optional<SearchRequestWordCountMin> wordCountMin) {
            this.wordCountMin = wordCountMin;
            return this;
        }

        @java.lang.Override
        public _FinalStage allDomainLinks(Object allDomainLinks) {
            this.allDomainLinks = Optional.ofNullable(allDomainLinks);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "all_domain_links", nulls = Nulls.SKIP)
        public _FinalStage allDomainLinks(Optional<Object> allDomainLinks) {
            this.allDomainLinks = allDomainLinks;
            return this;
        }

        @java.lang.Override
        public _FinalStage allLinks(Object allLinks) {
            this.allLinks = Optional.ofNullable(allLinks);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "all_links", nulls = Nulls.SKIP)
        public _FinalStage allLinks(Optional<Object> allLinks) {
            this.allLinks = allLinks;
            return this;
        }

        @java.lang.Override
        public _FinalStage parentUrl(Object parentUrl) {
            this.parentUrl = Optional.ofNullable(parentUrl);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "parent_url", nulls = Nulls.SKIP)
        public _FinalStage parentUrl(Optional<Object> parentUrl) {
            this.parentUrl = parentUrl;
            return this;
        }

        @java.lang.Override
        public _FinalStage isPaidContent(SearchRequestIsPaidContent isPaidContent) {
            this.isPaidContent = Optional.ofNullable(isPaidContent);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "is_paid_content", nulls = Nulls.SKIP)
        public _FinalStage isPaidContent(Optional<SearchRequestIsPaidContent> isPaidContent) {
            this.isPaidContent = isPaidContent;
            return this;
        }

        @java.lang.Override
        public _FinalStage isOpinion(SearchRequestIsOpinion isOpinion) {
            this.isOpinion = Optional.ofNullable(isOpinion);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "is_opinion", nulls = Nulls.SKIP)
        public _FinalStage isOpinion(Optional<SearchRequestIsOpinion> isOpinion) {
            this.isOpinion = isOpinion;
            return this;
        }

        @java.lang.Override
        public _FinalStage isHeadline(SearchRequestIsHeadline isHeadline) {
            this.isHeadline = Optional.ofNullable(isHeadline);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "is_headline", nulls = Nulls.SKIP)
        public _FinalStage isHeadline(Optional<SearchRequestIsHeadline> isHeadline) {
            this.isHeadline = isHeadline;
            return this;
        }

        @java.lang.Override
        public _FinalStage toRank(SearchRequestToRank toRank) {
            this.toRank = Optional.ofNullable(toRank);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "to_rank", nulls = Nulls.SKIP)
        public _FinalStage toRank(Optional<SearchRequestToRank> toRank) {
            this.toRank = toRank;
            return this;
        }

        @java.lang.Override
        public _FinalStage fromRank(SearchRequestFromRank fromRank) {
            this.fromRank = Optional.ofNullable(fromRank);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "from_rank", nulls = Nulls.SKIP)
        public _FinalStage fromRank(Optional<SearchRequestFromRank> fromRank) {
            this.fromRank = fromRank;
            return this;
        }

        @java.lang.Override
        public _FinalStage rankedOnly(SearchRequestRankedOnly rankedOnly) {
            this.rankedOnly = Optional.ofNullable(rankedOnly);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "ranked_only", nulls = Nulls.SKIP)
        public _FinalStage rankedOnly(Optional<SearchRequestRankedOnly> rankedOnly) {
            this.rankedOnly = rankedOnly;
            return this;
        }

        @java.lang.Override
        public _FinalStage sortBy(String sortBy) {
            this.sortBy = Optional.ofNullable(sortBy);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "sort_by", nulls = Nulls.SKIP)
        public _FinalStage sortBy(Optional<String> sortBy) {
            this.sortBy = sortBy;
            return this;
        }

        @java.lang.Override
        public _FinalStage byParseDate(SearchRequestByParseDate byParseDate) {
            this.byParseDate = Optional.ofNullable(byParseDate);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "by_parse_date", nulls = Nulls.SKIP)
        public _FinalStage byParseDate(Optional<SearchRequestByParseDate> byParseDate) {
            this.byParseDate = byParseDate;
            return this;
        }

        @java.lang.Override
        public _FinalStage publishedDatePrecision(String publishedDatePrecision) {
            this.publishedDatePrecision = Optional.ofNullable(publishedDatePrecision);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "published_date_precision", nulls = Nulls.SKIP)
        public _FinalStage publishedDatePrecision(Optional<String> publishedDatePrecision) {
            this.publishedDatePrecision = publishedDatePrecision;
            return this;
        }

        @java.lang.Override
        public _FinalStage to(SearchRequestTo to) {
            this.to = Optional.ofNullable(to);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "to_", nulls = Nulls.SKIP)
        public _FinalStage to(Optional<SearchRequestTo> to) {
            this.to = to;
            return this;
        }

        @java.lang.Override
        public _FinalStage from(SearchRequestFrom from) {
            this.from = Optional.ofNullable(from);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "from_", nulls = Nulls.SKIP)
        public _FinalStage from(Optional<SearchRequestFrom> from) {
            this.from = from;
            return this;
        }

        @java.lang.Override
        public _FinalStage notAuthorName(Object notAuthorName) {
            this.notAuthorName = Optional.ofNullable(notAuthorName);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "not_author_name", nulls = Nulls.SKIP)
        public _FinalStage notAuthorName(Optional<Object> notAuthorName) {
            this.notAuthorName = notAuthorName;
            return this;
        }

        @java.lang.Override
        public _FinalStage notCountries(Object notCountries) {
            this.notCountries = Optional.ofNullable(notCountries);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "not_countries", nulls = Nulls.SKIP)
        public _FinalStage notCountries(Optional<Object> notCountries) {
            this.notCountries = notCountries;
            return this;
        }

        @java.lang.Override
        public _FinalStage countries(Object countries) {
            this.countries = Optional.ofNullable(countries);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "countries", nulls = Nulls.SKIP)
        public _FinalStage countries(Optional<Object> countries) {
            this.countries = countries;
            return this;
        }

        @java.lang.Override
        public _FinalStage notLang(Object notLang) {
            this.notLang = Optional.ofNullable(notLang);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "not_lang", nulls = Nulls.SKIP)
        public _FinalStage notLang(Optional<Object> notLang) {
            this.notLang = notLang;
            return this;
        }

        @java.lang.Override
        public _FinalStage lang(Object lang) {
            this.lang = Optional.ofNullable(lang);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "lang", nulls = Nulls.SKIP)
        public _FinalStage lang(Optional<Object> lang) {
            this.lang = lang;
            return this;
        }

        @java.lang.Override
        public _FinalStage notSources(Object notSources) {
            this.notSources = Optional.ofNullable(notSources);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "not_sources", nulls = Nulls.SKIP)
        public _FinalStage notSources(Optional<Object> notSources) {
            this.notSources = notSources;
            return this;
        }

        @java.lang.Override
        public _FinalStage sources(Object sources) {
            this.sources = Optional.ofNullable(sources);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "sources", nulls = Nulls.SKIP)
        public _FinalStage sources(Optional<Object> sources) {
            this.sources = sources;
            return this;
        }

        @java.lang.Override
        public _FinalStage predefinedSources(Object predefinedSources) {
            this.predefinedSources = Optional.ofNullable(predefinedSources);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "predefined_sources", nulls = Nulls.SKIP)
        public _FinalStage predefinedSources(Optional<Object> predefinedSources) {
            this.predefinedSources = predefinedSources;
            return this;
        }

        @java.lang.Override
        public _FinalStage searchIn(String searchIn) {
            this.searchIn = Optional.ofNullable(searchIn);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "search_in", nulls = Nulls.SKIP)
        public _FinalStage searchIn(Optional<String> searchIn) {
            this.searchIn = searchIn;
            return this;
        }

        @java.lang.Override
        public SearchRequest build() {
            return new SearchRequest(
                    q,
                    searchIn,
                    predefinedSources,
                    sources,
                    notSources,
                    lang,
                    notLang,
                    countries,
                    notCountries,
                    notAuthorName,
                    from,
                    to,
                    publishedDatePrecision,
                    byParseDate,
                    sortBy,
                    rankedOnly,
                    fromRank,
                    toRank,
                    isHeadline,
                    isOpinion,
                    isPaidContent,
                    parentUrl,
                    allLinks,
                    allDomainLinks,
                    wordCountMin,
                    wordCountMax,
                    page,
                    pageSize,
                    clusteringVariable,
                    clusteringEnabled,
                    clusteringThreshold,
                    includeNlpData,
                    hasNlp,
                    theme,
                    notTheme,
                    orgEntityName,
                    perEntityName,
                    locEntityName,
                    miscEntityName,
                    titleSentimentMin,
                    titleSentimentMax,
                    contentSentimentMin,
                    contentSentimentMax,
                    iptcTags,
                    notIptcTags,
                    sourceName,
                    iabTags,
                    notIabTags,
                    excludeDuplicates,
                    additionalDomainInfo,
                    isNewsDomain,
                    newsDomainType,
                    newsType,
                    additionalProperties);
        }
    }
}
