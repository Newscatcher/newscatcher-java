/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.newscatcher.api.resources.authors.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.newscatcher.api.core.ObjectMappers;
import com.newscatcher.api.resources.authors.types.AuthorSearchRequestFrom;
import com.newscatcher.api.resources.authors.types.AuthorSearchRequestRankedOnly;
import com.newscatcher.api.resources.authors.types.AuthorSearchRequestTo;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = AuthorSearchRequest.Builder.class)
public final class AuthorSearchRequest {
    private final String authorName;

    private final Optional<String> notAuthorName;

    private final Optional<Object> sources;

    private final Optional<Object> predefinedSources;

    private final Optional<Object> notSources;

    private final Optional<Object> lang;

    private final Optional<Object> notLang;

    private final Optional<Object> countries;

    private final Optional<Object> notCountries;

    private final Optional<AuthorSearchRequestFrom> from;

    private final Optional<AuthorSearchRequestTo> to;

    private final Optional<String> publishedDatePrecision;

    private final Optional<Boolean> byParseDate;

    private final Optional<String> sortBy;

    private final Optional<AuthorSearchRequestRankedOnly> rankedOnly;

    private final Optional<Integer> fromRank;

    private final Optional<Integer> toRank;

    private final Optional<Boolean> isHeadline;

    private final Optional<Boolean> isOpinion;

    private final Optional<Boolean> isPaidContent;

    private final Optional<Object> parentUrl;

    private final Optional<Object> allLinks;

    private final Optional<Object> allDomainLinks;

    private final Optional<Integer> wordCountMin;

    private final Optional<Integer> wordCountMax;

    private final Optional<Integer> page;

    private final Optional<Integer> pageSize;

    private final Optional<Boolean> includeNlpData;

    private final Optional<Boolean> hasNlp;

    private final Optional<String> theme;

    private final Optional<String> notTheme;

    private final Optional<Double> titleSentimentMin;

    private final Optional<Double> titleSentimentMax;

    private final Optional<Double> contentSentimentMin;

    private final Optional<Double> contentSentimentMax;

    private final Optional<Object> iptcTags;

    private final Optional<Object> notIptcTags;

    private final Optional<Object> iabTags;

    private final Optional<Object> notIabTags;

    private final Map<String, Object> additionalProperties;

    private AuthorSearchRequest(
            String authorName,
            Optional<String> notAuthorName,
            Optional<Object> sources,
            Optional<Object> predefinedSources,
            Optional<Object> notSources,
            Optional<Object> lang,
            Optional<Object> notLang,
            Optional<Object> countries,
            Optional<Object> notCountries,
            Optional<AuthorSearchRequestFrom> from,
            Optional<AuthorSearchRequestTo> to,
            Optional<String> publishedDatePrecision,
            Optional<Boolean> byParseDate,
            Optional<String> sortBy,
            Optional<AuthorSearchRequestRankedOnly> rankedOnly,
            Optional<Integer> fromRank,
            Optional<Integer> toRank,
            Optional<Boolean> isHeadline,
            Optional<Boolean> isOpinion,
            Optional<Boolean> isPaidContent,
            Optional<Object> parentUrl,
            Optional<Object> allLinks,
            Optional<Object> allDomainLinks,
            Optional<Integer> wordCountMin,
            Optional<Integer> wordCountMax,
            Optional<Integer> page,
            Optional<Integer> pageSize,
            Optional<Boolean> includeNlpData,
            Optional<Boolean> hasNlp,
            Optional<String> theme,
            Optional<String> notTheme,
            Optional<Double> titleSentimentMin,
            Optional<Double> titleSentimentMax,
            Optional<Double> contentSentimentMin,
            Optional<Double> contentSentimentMax,
            Optional<Object> iptcTags,
            Optional<Object> notIptcTags,
            Optional<Object> iabTags,
            Optional<Object> notIabTags,
            Map<String, Object> additionalProperties) {
        this.authorName = authorName;
        this.notAuthorName = notAuthorName;
        this.sources = sources;
        this.predefinedSources = predefinedSources;
        this.notSources = notSources;
        this.lang = lang;
        this.notLang = notLang;
        this.countries = countries;
        this.notCountries = notCountries;
        this.from = from;
        this.to = to;
        this.publishedDatePrecision = publishedDatePrecision;
        this.byParseDate = byParseDate;
        this.sortBy = sortBy;
        this.rankedOnly = rankedOnly;
        this.fromRank = fromRank;
        this.toRank = toRank;
        this.isHeadline = isHeadline;
        this.isOpinion = isOpinion;
        this.isPaidContent = isPaidContent;
        this.parentUrl = parentUrl;
        this.allLinks = allLinks;
        this.allDomainLinks = allDomainLinks;
        this.wordCountMin = wordCountMin;
        this.wordCountMax = wordCountMax;
        this.page = page;
        this.pageSize = pageSize;
        this.includeNlpData = includeNlpData;
        this.hasNlp = hasNlp;
        this.theme = theme;
        this.notTheme = notTheme;
        this.titleSentimentMin = titleSentimentMin;
        this.titleSentimentMax = titleSentimentMax;
        this.contentSentimentMin = contentSentimentMin;
        this.contentSentimentMax = contentSentimentMax;
        this.iptcTags = iptcTags;
        this.notIptcTags = notIptcTags;
        this.iabTags = iabTags;
        this.notIabTags = notIabTags;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("author_name")
    public String getAuthorName() {
        return authorName;
    }

    @JsonProperty("not_author_name")
    public Optional<String> getNotAuthorName() {
        return notAuthorName;
    }

    @JsonProperty("sources")
    public Optional<Object> getSources() {
        return sources;
    }

    @JsonProperty("predefined_sources")
    public Optional<Object> getPredefinedSources() {
        return predefinedSources;
    }

    @JsonProperty("not_sources")
    public Optional<Object> getNotSources() {
        return notSources;
    }

    @JsonProperty("lang")
    public Optional<Object> getLang() {
        return lang;
    }

    @JsonProperty("not_lang")
    public Optional<Object> getNotLang() {
        return notLang;
    }

    @JsonProperty("countries")
    public Optional<Object> getCountries() {
        return countries;
    }

    @JsonProperty("not_countries")
    public Optional<Object> getNotCountries() {
        return notCountries;
    }

    @JsonProperty("from_")
    public Optional<AuthorSearchRequestFrom> getFrom() {
        return from;
    }

    @JsonProperty("to_")
    public Optional<AuthorSearchRequestTo> getTo() {
        return to;
    }

    @JsonProperty("published_date_precision")
    public Optional<String> getPublishedDatePrecision() {
        return publishedDatePrecision;
    }

    @JsonProperty("by_parse_date")
    public Optional<Boolean> getByParseDate() {
        return byParseDate;
    }

    @JsonProperty("sort_by")
    public Optional<String> getSortBy() {
        return sortBy;
    }

    @JsonProperty("ranked_only")
    public Optional<AuthorSearchRequestRankedOnly> getRankedOnly() {
        return rankedOnly;
    }

    @JsonProperty("from_rank")
    public Optional<Integer> getFromRank() {
        return fromRank;
    }

    @JsonProperty("to_rank")
    public Optional<Integer> getToRank() {
        return toRank;
    }

    @JsonProperty("is_headline")
    public Optional<Boolean> getIsHeadline() {
        return isHeadline;
    }

    @JsonProperty("is_opinion")
    public Optional<Boolean> getIsOpinion() {
        return isOpinion;
    }

    @JsonProperty("is_paid_content")
    public Optional<Boolean> getIsPaidContent() {
        return isPaidContent;
    }

    @JsonProperty("parent_url")
    public Optional<Object> getParentUrl() {
        return parentUrl;
    }

    @JsonProperty("all_links")
    public Optional<Object> getAllLinks() {
        return allLinks;
    }

    @JsonProperty("all_domain_links")
    public Optional<Object> getAllDomainLinks() {
        return allDomainLinks;
    }

    @JsonProperty("word_count_min")
    public Optional<Integer> getWordCountMin() {
        return wordCountMin;
    }

    @JsonProperty("word_count_max")
    public Optional<Integer> getWordCountMax() {
        return wordCountMax;
    }

    @JsonProperty("page")
    public Optional<Integer> getPage() {
        return page;
    }

    @JsonProperty("page_size")
    public Optional<Integer> getPageSize() {
        return pageSize;
    }

    @JsonProperty("include_nlp_data")
    public Optional<Boolean> getIncludeNlpData() {
        return includeNlpData;
    }

    @JsonProperty("has_nlp")
    public Optional<Boolean> getHasNlp() {
        return hasNlp;
    }

    @JsonProperty("theme")
    public Optional<String> getTheme() {
        return theme;
    }

    @JsonProperty("not_theme")
    public Optional<String> getNotTheme() {
        return notTheme;
    }

    @JsonProperty("title_sentiment_min")
    public Optional<Double> getTitleSentimentMin() {
        return titleSentimentMin;
    }

    @JsonProperty("title_sentiment_max")
    public Optional<Double> getTitleSentimentMax() {
        return titleSentimentMax;
    }

    @JsonProperty("content_sentiment_min")
    public Optional<Double> getContentSentimentMin() {
        return contentSentimentMin;
    }

    @JsonProperty("content_sentiment_max")
    public Optional<Double> getContentSentimentMax() {
        return contentSentimentMax;
    }

    @JsonProperty("iptc_tags")
    public Optional<Object> getIptcTags() {
        return iptcTags;
    }

    @JsonProperty("not_iptc_tags")
    public Optional<Object> getNotIptcTags() {
        return notIptcTags;
    }

    @JsonProperty("iab_tags")
    public Optional<Object> getIabTags() {
        return iabTags;
    }

    @JsonProperty("not_iab_tags")
    public Optional<Object> getNotIabTags() {
        return notIabTags;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof AuthorSearchRequest && equalTo((AuthorSearchRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(AuthorSearchRequest other) {
        return authorName.equals(other.authorName)
                && notAuthorName.equals(other.notAuthorName)
                && sources.equals(other.sources)
                && predefinedSources.equals(other.predefinedSources)
                && notSources.equals(other.notSources)
                && lang.equals(other.lang)
                && notLang.equals(other.notLang)
                && countries.equals(other.countries)
                && notCountries.equals(other.notCountries)
                && from.equals(other.from)
                && to.equals(other.to)
                && publishedDatePrecision.equals(other.publishedDatePrecision)
                && byParseDate.equals(other.byParseDate)
                && sortBy.equals(other.sortBy)
                && rankedOnly.equals(other.rankedOnly)
                && fromRank.equals(other.fromRank)
                && toRank.equals(other.toRank)
                && isHeadline.equals(other.isHeadline)
                && isOpinion.equals(other.isOpinion)
                && isPaidContent.equals(other.isPaidContent)
                && parentUrl.equals(other.parentUrl)
                && allLinks.equals(other.allLinks)
                && allDomainLinks.equals(other.allDomainLinks)
                && wordCountMin.equals(other.wordCountMin)
                && wordCountMax.equals(other.wordCountMax)
                && page.equals(other.page)
                && pageSize.equals(other.pageSize)
                && includeNlpData.equals(other.includeNlpData)
                && hasNlp.equals(other.hasNlp)
                && theme.equals(other.theme)
                && notTheme.equals(other.notTheme)
                && titleSentimentMin.equals(other.titleSentimentMin)
                && titleSentimentMax.equals(other.titleSentimentMax)
                && contentSentimentMin.equals(other.contentSentimentMin)
                && contentSentimentMax.equals(other.contentSentimentMax)
                && iptcTags.equals(other.iptcTags)
                && notIptcTags.equals(other.notIptcTags)
                && iabTags.equals(other.iabTags)
                && notIabTags.equals(other.notIabTags);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.authorName,
                this.notAuthorName,
                this.sources,
                this.predefinedSources,
                this.notSources,
                this.lang,
                this.notLang,
                this.countries,
                this.notCountries,
                this.from,
                this.to,
                this.publishedDatePrecision,
                this.byParseDate,
                this.sortBy,
                this.rankedOnly,
                this.fromRank,
                this.toRank,
                this.isHeadline,
                this.isOpinion,
                this.isPaidContent,
                this.parentUrl,
                this.allLinks,
                this.allDomainLinks,
                this.wordCountMin,
                this.wordCountMax,
                this.page,
                this.pageSize,
                this.includeNlpData,
                this.hasNlp,
                this.theme,
                this.notTheme,
                this.titleSentimentMin,
                this.titleSentimentMax,
                this.contentSentimentMin,
                this.contentSentimentMax,
                this.iptcTags,
                this.notIptcTags,
                this.iabTags,
                this.notIabTags);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static AuthorNameStage builder() {
        return new Builder();
    }

    public interface AuthorNameStage {
        _FinalStage authorName(@NotNull String authorName);

        Builder from(AuthorSearchRequest other);
    }

    public interface _FinalStage {
        AuthorSearchRequest build();

        _FinalStage notAuthorName(Optional<String> notAuthorName);

        _FinalStage notAuthorName(String notAuthorName);

        _FinalStage sources(Optional<Object> sources);

        _FinalStage sources(Object sources);

        _FinalStage predefinedSources(Optional<Object> predefinedSources);

        _FinalStage predefinedSources(Object predefinedSources);

        _FinalStage notSources(Optional<Object> notSources);

        _FinalStage notSources(Object notSources);

        _FinalStage lang(Optional<Object> lang);

        _FinalStage lang(Object lang);

        _FinalStage notLang(Optional<Object> notLang);

        _FinalStage notLang(Object notLang);

        _FinalStage countries(Optional<Object> countries);

        _FinalStage countries(Object countries);

        _FinalStage notCountries(Optional<Object> notCountries);

        _FinalStage notCountries(Object notCountries);

        _FinalStage from(Optional<AuthorSearchRequestFrom> from);

        _FinalStage from(AuthorSearchRequestFrom from);

        _FinalStage to(Optional<AuthorSearchRequestTo> to);

        _FinalStage to(AuthorSearchRequestTo to);

        _FinalStage publishedDatePrecision(Optional<String> publishedDatePrecision);

        _FinalStage publishedDatePrecision(String publishedDatePrecision);

        _FinalStage byParseDate(Optional<Boolean> byParseDate);

        _FinalStage byParseDate(Boolean byParseDate);

        _FinalStage sortBy(Optional<String> sortBy);

        _FinalStage sortBy(String sortBy);

        _FinalStage rankedOnly(Optional<AuthorSearchRequestRankedOnly> rankedOnly);

        _FinalStage rankedOnly(AuthorSearchRequestRankedOnly rankedOnly);

        _FinalStage fromRank(Optional<Integer> fromRank);

        _FinalStage fromRank(Integer fromRank);

        _FinalStage toRank(Optional<Integer> toRank);

        _FinalStage toRank(Integer toRank);

        _FinalStage isHeadline(Optional<Boolean> isHeadline);

        _FinalStage isHeadline(Boolean isHeadline);

        _FinalStage isOpinion(Optional<Boolean> isOpinion);

        _FinalStage isOpinion(Boolean isOpinion);

        _FinalStage isPaidContent(Optional<Boolean> isPaidContent);

        _FinalStage isPaidContent(Boolean isPaidContent);

        _FinalStage parentUrl(Optional<Object> parentUrl);

        _FinalStage parentUrl(Object parentUrl);

        _FinalStage allLinks(Optional<Object> allLinks);

        _FinalStage allLinks(Object allLinks);

        _FinalStage allDomainLinks(Optional<Object> allDomainLinks);

        _FinalStage allDomainLinks(Object allDomainLinks);

        _FinalStage wordCountMin(Optional<Integer> wordCountMin);

        _FinalStage wordCountMin(Integer wordCountMin);

        _FinalStage wordCountMax(Optional<Integer> wordCountMax);

        _FinalStage wordCountMax(Integer wordCountMax);

        _FinalStage page(Optional<Integer> page);

        _FinalStage page(Integer page);

        _FinalStage pageSize(Optional<Integer> pageSize);

        _FinalStage pageSize(Integer pageSize);

        _FinalStage includeNlpData(Optional<Boolean> includeNlpData);

        _FinalStage includeNlpData(Boolean includeNlpData);

        _FinalStage hasNlp(Optional<Boolean> hasNlp);

        _FinalStage hasNlp(Boolean hasNlp);

        _FinalStage theme(Optional<String> theme);

        _FinalStage theme(String theme);

        _FinalStage notTheme(Optional<String> notTheme);

        _FinalStage notTheme(String notTheme);

        _FinalStage titleSentimentMin(Optional<Double> titleSentimentMin);

        _FinalStage titleSentimentMin(Double titleSentimentMin);

        _FinalStage titleSentimentMax(Optional<Double> titleSentimentMax);

        _FinalStage titleSentimentMax(Double titleSentimentMax);

        _FinalStage contentSentimentMin(Optional<Double> contentSentimentMin);

        _FinalStage contentSentimentMin(Double contentSentimentMin);

        _FinalStage contentSentimentMax(Optional<Double> contentSentimentMax);

        _FinalStage contentSentimentMax(Double contentSentimentMax);

        _FinalStage iptcTags(Optional<Object> iptcTags);

        _FinalStage iptcTags(Object iptcTags);

        _FinalStage notIptcTags(Optional<Object> notIptcTags);

        _FinalStage notIptcTags(Object notIptcTags);

        _FinalStage iabTags(Optional<Object> iabTags);

        _FinalStage iabTags(Object iabTags);

        _FinalStage notIabTags(Optional<Object> notIabTags);

        _FinalStage notIabTags(Object notIabTags);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements AuthorNameStage, _FinalStage {
        private String authorName;

        private Optional<Object> notIabTags = Optional.empty();

        private Optional<Object> iabTags = Optional.empty();

        private Optional<Object> notIptcTags = Optional.empty();

        private Optional<Object> iptcTags = Optional.empty();

        private Optional<Double> contentSentimentMax = Optional.empty();

        private Optional<Double> contentSentimentMin = Optional.empty();

        private Optional<Double> titleSentimentMax = Optional.empty();

        private Optional<Double> titleSentimentMin = Optional.empty();

        private Optional<String> notTheme = Optional.empty();

        private Optional<String> theme = Optional.empty();

        private Optional<Boolean> hasNlp = Optional.empty();

        private Optional<Boolean> includeNlpData = Optional.empty();

        private Optional<Integer> pageSize = Optional.empty();

        private Optional<Integer> page = Optional.empty();

        private Optional<Integer> wordCountMax = Optional.empty();

        private Optional<Integer> wordCountMin = Optional.empty();

        private Optional<Object> allDomainLinks = Optional.empty();

        private Optional<Object> allLinks = Optional.empty();

        private Optional<Object> parentUrl = Optional.empty();

        private Optional<Boolean> isPaidContent = Optional.empty();

        private Optional<Boolean> isOpinion = Optional.empty();

        private Optional<Boolean> isHeadline = Optional.empty();

        private Optional<Integer> toRank = Optional.empty();

        private Optional<Integer> fromRank = Optional.empty();

        private Optional<AuthorSearchRequestRankedOnly> rankedOnly = Optional.empty();

        private Optional<String> sortBy = Optional.empty();

        private Optional<Boolean> byParseDate = Optional.empty();

        private Optional<String> publishedDatePrecision = Optional.empty();

        private Optional<AuthorSearchRequestTo> to = Optional.empty();

        private Optional<AuthorSearchRequestFrom> from = Optional.empty();

        private Optional<Object> notCountries = Optional.empty();

        private Optional<Object> countries = Optional.empty();

        private Optional<Object> notLang = Optional.empty();

        private Optional<Object> lang = Optional.empty();

        private Optional<Object> notSources = Optional.empty();

        private Optional<Object> predefinedSources = Optional.empty();

        private Optional<Object> sources = Optional.empty();

        private Optional<String> notAuthorName = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(AuthorSearchRequest other) {
            authorName(other.getAuthorName());
            notAuthorName(other.getNotAuthorName());
            sources(other.getSources());
            predefinedSources(other.getPredefinedSources());
            notSources(other.getNotSources());
            lang(other.getLang());
            notLang(other.getNotLang());
            countries(other.getCountries());
            notCountries(other.getNotCountries());
            from(other.getFrom());
            to(other.getTo());
            publishedDatePrecision(other.getPublishedDatePrecision());
            byParseDate(other.getByParseDate());
            sortBy(other.getSortBy());
            rankedOnly(other.getRankedOnly());
            fromRank(other.getFromRank());
            toRank(other.getToRank());
            isHeadline(other.getIsHeadline());
            isOpinion(other.getIsOpinion());
            isPaidContent(other.getIsPaidContent());
            parentUrl(other.getParentUrl());
            allLinks(other.getAllLinks());
            allDomainLinks(other.getAllDomainLinks());
            wordCountMin(other.getWordCountMin());
            wordCountMax(other.getWordCountMax());
            page(other.getPage());
            pageSize(other.getPageSize());
            includeNlpData(other.getIncludeNlpData());
            hasNlp(other.getHasNlp());
            theme(other.getTheme());
            notTheme(other.getNotTheme());
            titleSentimentMin(other.getTitleSentimentMin());
            titleSentimentMax(other.getTitleSentimentMax());
            contentSentimentMin(other.getContentSentimentMin());
            contentSentimentMax(other.getContentSentimentMax());
            iptcTags(other.getIptcTags());
            notIptcTags(other.getNotIptcTags());
            iabTags(other.getIabTags());
            notIabTags(other.getNotIabTags());
            return this;
        }

        @java.lang.Override
        @JsonSetter("author_name")
        public _FinalStage authorName(@NotNull String authorName) {
            this.authorName = Objects.requireNonNull(authorName, "authorName must not be null");
            return this;
        }

        @java.lang.Override
        public _FinalStage notIabTags(Object notIabTags) {
            this.notIabTags = Optional.ofNullable(notIabTags);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "not_iab_tags", nulls = Nulls.SKIP)
        public _FinalStage notIabTags(Optional<Object> notIabTags) {
            this.notIabTags = notIabTags;
            return this;
        }

        @java.lang.Override
        public _FinalStage iabTags(Object iabTags) {
            this.iabTags = Optional.ofNullable(iabTags);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "iab_tags", nulls = Nulls.SKIP)
        public _FinalStage iabTags(Optional<Object> iabTags) {
            this.iabTags = iabTags;
            return this;
        }

        @java.lang.Override
        public _FinalStage notIptcTags(Object notIptcTags) {
            this.notIptcTags = Optional.ofNullable(notIptcTags);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "not_iptc_tags", nulls = Nulls.SKIP)
        public _FinalStage notIptcTags(Optional<Object> notIptcTags) {
            this.notIptcTags = notIptcTags;
            return this;
        }

        @java.lang.Override
        public _FinalStage iptcTags(Object iptcTags) {
            this.iptcTags = Optional.ofNullable(iptcTags);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "iptc_tags", nulls = Nulls.SKIP)
        public _FinalStage iptcTags(Optional<Object> iptcTags) {
            this.iptcTags = iptcTags;
            return this;
        }

        @java.lang.Override
        public _FinalStage contentSentimentMax(Double contentSentimentMax) {
            this.contentSentimentMax = Optional.ofNullable(contentSentimentMax);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "content_sentiment_max", nulls = Nulls.SKIP)
        public _FinalStage contentSentimentMax(Optional<Double> contentSentimentMax) {
            this.contentSentimentMax = contentSentimentMax;
            return this;
        }

        @java.lang.Override
        public _FinalStage contentSentimentMin(Double contentSentimentMin) {
            this.contentSentimentMin = Optional.ofNullable(contentSentimentMin);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "content_sentiment_min", nulls = Nulls.SKIP)
        public _FinalStage contentSentimentMin(Optional<Double> contentSentimentMin) {
            this.contentSentimentMin = contentSentimentMin;
            return this;
        }

        @java.lang.Override
        public _FinalStage titleSentimentMax(Double titleSentimentMax) {
            this.titleSentimentMax = Optional.ofNullable(titleSentimentMax);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "title_sentiment_max", nulls = Nulls.SKIP)
        public _FinalStage titleSentimentMax(Optional<Double> titleSentimentMax) {
            this.titleSentimentMax = titleSentimentMax;
            return this;
        }

        @java.lang.Override
        public _FinalStage titleSentimentMin(Double titleSentimentMin) {
            this.titleSentimentMin = Optional.ofNullable(titleSentimentMin);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "title_sentiment_min", nulls = Nulls.SKIP)
        public _FinalStage titleSentimentMin(Optional<Double> titleSentimentMin) {
            this.titleSentimentMin = titleSentimentMin;
            return this;
        }

        @java.lang.Override
        public _FinalStage notTheme(String notTheme) {
            this.notTheme = Optional.ofNullable(notTheme);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "not_theme", nulls = Nulls.SKIP)
        public _FinalStage notTheme(Optional<String> notTheme) {
            this.notTheme = notTheme;
            return this;
        }

        @java.lang.Override
        public _FinalStage theme(String theme) {
            this.theme = Optional.ofNullable(theme);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "theme", nulls = Nulls.SKIP)
        public _FinalStage theme(Optional<String> theme) {
            this.theme = theme;
            return this;
        }

        @java.lang.Override
        public _FinalStage hasNlp(Boolean hasNlp) {
            this.hasNlp = Optional.ofNullable(hasNlp);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "has_nlp", nulls = Nulls.SKIP)
        public _FinalStage hasNlp(Optional<Boolean> hasNlp) {
            this.hasNlp = hasNlp;
            return this;
        }

        @java.lang.Override
        public _FinalStage includeNlpData(Boolean includeNlpData) {
            this.includeNlpData = Optional.ofNullable(includeNlpData);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "include_nlp_data", nulls = Nulls.SKIP)
        public _FinalStage includeNlpData(Optional<Boolean> includeNlpData) {
            this.includeNlpData = includeNlpData;
            return this;
        }

        @java.lang.Override
        public _FinalStage pageSize(Integer pageSize) {
            this.pageSize = Optional.ofNullable(pageSize);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "page_size", nulls = Nulls.SKIP)
        public _FinalStage pageSize(Optional<Integer> pageSize) {
            this.pageSize = pageSize;
            return this;
        }

        @java.lang.Override
        public _FinalStage page(Integer page) {
            this.page = Optional.ofNullable(page);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "page", nulls = Nulls.SKIP)
        public _FinalStage page(Optional<Integer> page) {
            this.page = page;
            return this;
        }

        @java.lang.Override
        public _FinalStage wordCountMax(Integer wordCountMax) {
            this.wordCountMax = Optional.ofNullable(wordCountMax);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "word_count_max", nulls = Nulls.SKIP)
        public _FinalStage wordCountMax(Optional<Integer> wordCountMax) {
            this.wordCountMax = wordCountMax;
            return this;
        }

        @java.lang.Override
        public _FinalStage wordCountMin(Integer wordCountMin) {
            this.wordCountMin = Optional.ofNullable(wordCountMin);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "word_count_min", nulls = Nulls.SKIP)
        public _FinalStage wordCountMin(Optional<Integer> wordCountMin) {
            this.wordCountMin = wordCountMin;
            return this;
        }

        @java.lang.Override
        public _FinalStage allDomainLinks(Object allDomainLinks) {
            this.allDomainLinks = Optional.ofNullable(allDomainLinks);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "all_domain_links", nulls = Nulls.SKIP)
        public _FinalStage allDomainLinks(Optional<Object> allDomainLinks) {
            this.allDomainLinks = allDomainLinks;
            return this;
        }

        @java.lang.Override
        public _FinalStage allLinks(Object allLinks) {
            this.allLinks = Optional.ofNullable(allLinks);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "all_links", nulls = Nulls.SKIP)
        public _FinalStage allLinks(Optional<Object> allLinks) {
            this.allLinks = allLinks;
            return this;
        }

        @java.lang.Override
        public _FinalStage parentUrl(Object parentUrl) {
            this.parentUrl = Optional.ofNullable(parentUrl);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "parent_url", nulls = Nulls.SKIP)
        public _FinalStage parentUrl(Optional<Object> parentUrl) {
            this.parentUrl = parentUrl;
            return this;
        }

        @java.lang.Override
        public _FinalStage isPaidContent(Boolean isPaidContent) {
            this.isPaidContent = Optional.ofNullable(isPaidContent);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "is_paid_content", nulls = Nulls.SKIP)
        public _FinalStage isPaidContent(Optional<Boolean> isPaidContent) {
            this.isPaidContent = isPaidContent;
            return this;
        }

        @java.lang.Override
        public _FinalStage isOpinion(Boolean isOpinion) {
            this.isOpinion = Optional.ofNullable(isOpinion);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "is_opinion", nulls = Nulls.SKIP)
        public _FinalStage isOpinion(Optional<Boolean> isOpinion) {
            this.isOpinion = isOpinion;
            return this;
        }

        @java.lang.Override
        public _FinalStage isHeadline(Boolean isHeadline) {
            this.isHeadline = Optional.ofNullable(isHeadline);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "is_headline", nulls = Nulls.SKIP)
        public _FinalStage isHeadline(Optional<Boolean> isHeadline) {
            this.isHeadline = isHeadline;
            return this;
        }

        @java.lang.Override
        public _FinalStage toRank(Integer toRank) {
            this.toRank = Optional.ofNullable(toRank);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "to_rank", nulls = Nulls.SKIP)
        public _FinalStage toRank(Optional<Integer> toRank) {
            this.toRank = toRank;
            return this;
        }

        @java.lang.Override
        public _FinalStage fromRank(Integer fromRank) {
            this.fromRank = Optional.ofNullable(fromRank);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "from_rank", nulls = Nulls.SKIP)
        public _FinalStage fromRank(Optional<Integer> fromRank) {
            this.fromRank = fromRank;
            return this;
        }

        @java.lang.Override
        public _FinalStage rankedOnly(AuthorSearchRequestRankedOnly rankedOnly) {
            this.rankedOnly = Optional.ofNullable(rankedOnly);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "ranked_only", nulls = Nulls.SKIP)
        public _FinalStage rankedOnly(Optional<AuthorSearchRequestRankedOnly> rankedOnly) {
            this.rankedOnly = rankedOnly;
            return this;
        }

        @java.lang.Override
        public _FinalStage sortBy(String sortBy) {
            this.sortBy = Optional.ofNullable(sortBy);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "sort_by", nulls = Nulls.SKIP)
        public _FinalStage sortBy(Optional<String> sortBy) {
            this.sortBy = sortBy;
            return this;
        }

        @java.lang.Override
        public _FinalStage byParseDate(Boolean byParseDate) {
            this.byParseDate = Optional.ofNullable(byParseDate);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "by_parse_date", nulls = Nulls.SKIP)
        public _FinalStage byParseDate(Optional<Boolean> byParseDate) {
            this.byParseDate = byParseDate;
            return this;
        }

        @java.lang.Override
        public _FinalStage publishedDatePrecision(String publishedDatePrecision) {
            this.publishedDatePrecision = Optional.ofNullable(publishedDatePrecision);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "published_date_precision", nulls = Nulls.SKIP)
        public _FinalStage publishedDatePrecision(Optional<String> publishedDatePrecision) {
            this.publishedDatePrecision = publishedDatePrecision;
            return this;
        }

        @java.lang.Override
        public _FinalStage to(AuthorSearchRequestTo to) {
            this.to = Optional.ofNullable(to);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "to_", nulls = Nulls.SKIP)
        public _FinalStage to(Optional<AuthorSearchRequestTo> to) {
            this.to = to;
            return this;
        }

        @java.lang.Override
        public _FinalStage from(AuthorSearchRequestFrom from) {
            this.from = Optional.ofNullable(from);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "from_", nulls = Nulls.SKIP)
        public _FinalStage from(Optional<AuthorSearchRequestFrom> from) {
            this.from = from;
            return this;
        }

        @java.lang.Override
        public _FinalStage notCountries(Object notCountries) {
            this.notCountries = Optional.ofNullable(notCountries);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "not_countries", nulls = Nulls.SKIP)
        public _FinalStage notCountries(Optional<Object> notCountries) {
            this.notCountries = notCountries;
            return this;
        }

        @java.lang.Override
        public _FinalStage countries(Object countries) {
            this.countries = Optional.ofNullable(countries);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "countries", nulls = Nulls.SKIP)
        public _FinalStage countries(Optional<Object> countries) {
            this.countries = countries;
            return this;
        }

        @java.lang.Override
        public _FinalStage notLang(Object notLang) {
            this.notLang = Optional.ofNullable(notLang);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "not_lang", nulls = Nulls.SKIP)
        public _FinalStage notLang(Optional<Object> notLang) {
            this.notLang = notLang;
            return this;
        }

        @java.lang.Override
        public _FinalStage lang(Object lang) {
            this.lang = Optional.ofNullable(lang);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "lang", nulls = Nulls.SKIP)
        public _FinalStage lang(Optional<Object> lang) {
            this.lang = lang;
            return this;
        }

        @java.lang.Override
        public _FinalStage notSources(Object notSources) {
            this.notSources = Optional.ofNullable(notSources);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "not_sources", nulls = Nulls.SKIP)
        public _FinalStage notSources(Optional<Object> notSources) {
            this.notSources = notSources;
            return this;
        }

        @java.lang.Override
        public _FinalStage predefinedSources(Object predefinedSources) {
            this.predefinedSources = Optional.ofNullable(predefinedSources);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "predefined_sources", nulls = Nulls.SKIP)
        public _FinalStage predefinedSources(Optional<Object> predefinedSources) {
            this.predefinedSources = predefinedSources;
            return this;
        }

        @java.lang.Override
        public _FinalStage sources(Object sources) {
            this.sources = Optional.ofNullable(sources);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "sources", nulls = Nulls.SKIP)
        public _FinalStage sources(Optional<Object> sources) {
            this.sources = sources;
            return this;
        }

        @java.lang.Override
        public _FinalStage notAuthorName(String notAuthorName) {
            this.notAuthorName = Optional.ofNullable(notAuthorName);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "not_author_name", nulls = Nulls.SKIP)
        public _FinalStage notAuthorName(Optional<String> notAuthorName) {
            this.notAuthorName = notAuthorName;
            return this;
        }

        @java.lang.Override
        public AuthorSearchRequest build() {
            return new AuthorSearchRequest(
                    authorName,
                    notAuthorName,
                    sources,
                    predefinedSources,
                    notSources,
                    lang,
                    notLang,
                    countries,
                    notCountries,
                    from,
                    to,
                    publishedDatePrecision,
                    byParseDate,
                    sortBy,
                    rankedOnly,
                    fromRank,
                    toRank,
                    isHeadline,
                    isOpinion,
                    isPaidContent,
                    parentUrl,
                    allLinks,
                    allDomainLinks,
                    wordCountMin,
                    wordCountMax,
                    page,
                    pageSize,
                    includeNlpData,
                    hasNlp,
                    theme,
                    notTheme,
                    titleSentimentMin,
                    titleSentimentMax,
                    contentSentimentMin,
                    contentSentimentMax,
                    iptcTags,
                    notIptcTags,
                    iabTags,
                    notIabTags,
                    additionalProperties);
        }
    }
}
