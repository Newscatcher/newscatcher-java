/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.newscatcher.api.resources.search.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.newscatcher.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = SearchGetRequest.Builder.class)
public final class SearchGetRequest {
    private final String q;

    private final Optional<String> searchIn;

    private final String predefinedSources;

    private final String sources;

    private final String notSources;

    private final String lang;

    private final String notLang;

    private final String countries;

    private final String notCountries;

    private final String notAuthorName;

    private final Optional<String> from;

    private final Optional<String> to;

    private final Optional<String> publishedDatePrecision;

    private final Optional<String> byParseDate;

    private final Optional<String> sortBy;

    private final Optional<String> rankedOnly;

    private final Optional<String> fromRank;

    private final Optional<String> toRank;

    private final Optional<String> isHeadline;

    private final Optional<String> isOpinion;

    private final Optional<String> isPaidContent;

    private final String parentUrl;

    private final String allLinks;

    private final String allDomainLinks;

    private final Optional<String> wordCountMin;

    private final Optional<String> wordCountMax;

    private final Optional<String> page;

    private final Optional<String> pageSize;

    private final Optional<String> clusteringVariable;

    private final Optional<String> clusteringEnabled;

    private final Optional<Double> clusteringThreshold;

    private final Optional<String> includeNlpData;

    private final Optional<Boolean> hasNlp;

    private final Optional<String> theme;

    private final Optional<String> notTheme;

    private final Optional<String> orgEntityName;

    private final Optional<String> perEntityName;

    private final Optional<String> locEntityName;

    private final Optional<String> miscEntityName;

    private final Optional<Double> titleSentimentMin;

    private final Optional<Double> titleSentimentMax;

    private final Optional<Double> contentSentimentMin;

    private final Optional<Double> contentSentimentMax;

    private final String iptcTags;

    private final String notIptcTags;

    private final String sourceName;

    private final String iabTags;

    private final String notIabTags;

    private final Optional<Boolean> excludeDuplicates;

    private final Optional<Boolean> additionalDomainInfo;

    private final Optional<Boolean> isNewsDomain;

    private final String newsDomainType;

    private final String newsType;

    private final Map<String, Object> additionalProperties;

    private SearchGetRequest(
            String q,
            Optional<String> searchIn,
            String predefinedSources,
            String sources,
            String notSources,
            String lang,
            String notLang,
            String countries,
            String notCountries,
            String notAuthorName,
            Optional<String> from,
            Optional<String> to,
            Optional<String> publishedDatePrecision,
            Optional<String> byParseDate,
            Optional<String> sortBy,
            Optional<String> rankedOnly,
            Optional<String> fromRank,
            Optional<String> toRank,
            Optional<String> isHeadline,
            Optional<String> isOpinion,
            Optional<String> isPaidContent,
            String parentUrl,
            String allLinks,
            String allDomainLinks,
            Optional<String> wordCountMin,
            Optional<String> wordCountMax,
            Optional<String> page,
            Optional<String> pageSize,
            Optional<String> clusteringVariable,
            Optional<String> clusteringEnabled,
            Optional<Double> clusteringThreshold,
            Optional<String> includeNlpData,
            Optional<Boolean> hasNlp,
            Optional<String> theme,
            Optional<String> notTheme,
            Optional<String> orgEntityName,
            Optional<String> perEntityName,
            Optional<String> locEntityName,
            Optional<String> miscEntityName,
            Optional<Double> titleSentimentMin,
            Optional<Double> titleSentimentMax,
            Optional<Double> contentSentimentMin,
            Optional<Double> contentSentimentMax,
            String iptcTags,
            String notIptcTags,
            String sourceName,
            String iabTags,
            String notIabTags,
            Optional<Boolean> excludeDuplicates,
            Optional<Boolean> additionalDomainInfo,
            Optional<Boolean> isNewsDomain,
            String newsDomainType,
            String newsType,
            Map<String, Object> additionalProperties) {
        this.q = q;
        this.searchIn = searchIn;
        this.predefinedSources = predefinedSources;
        this.sources = sources;
        this.notSources = notSources;
        this.lang = lang;
        this.notLang = notLang;
        this.countries = countries;
        this.notCountries = notCountries;
        this.notAuthorName = notAuthorName;
        this.from = from;
        this.to = to;
        this.publishedDatePrecision = publishedDatePrecision;
        this.byParseDate = byParseDate;
        this.sortBy = sortBy;
        this.rankedOnly = rankedOnly;
        this.fromRank = fromRank;
        this.toRank = toRank;
        this.isHeadline = isHeadline;
        this.isOpinion = isOpinion;
        this.isPaidContent = isPaidContent;
        this.parentUrl = parentUrl;
        this.allLinks = allLinks;
        this.allDomainLinks = allDomainLinks;
        this.wordCountMin = wordCountMin;
        this.wordCountMax = wordCountMax;
        this.page = page;
        this.pageSize = pageSize;
        this.clusteringVariable = clusteringVariable;
        this.clusteringEnabled = clusteringEnabled;
        this.clusteringThreshold = clusteringThreshold;
        this.includeNlpData = includeNlpData;
        this.hasNlp = hasNlp;
        this.theme = theme;
        this.notTheme = notTheme;
        this.orgEntityName = orgEntityName;
        this.perEntityName = perEntityName;
        this.locEntityName = locEntityName;
        this.miscEntityName = miscEntityName;
        this.titleSentimentMin = titleSentimentMin;
        this.titleSentimentMax = titleSentimentMax;
        this.contentSentimentMin = contentSentimentMin;
        this.contentSentimentMax = contentSentimentMax;
        this.iptcTags = iptcTags;
        this.notIptcTags = notIptcTags;
        this.sourceName = sourceName;
        this.iabTags = iabTags;
        this.notIabTags = notIabTags;
        this.excludeDuplicates = excludeDuplicates;
        this.additionalDomainInfo = additionalDomainInfo;
        this.isNewsDomain = isNewsDomain;
        this.newsDomainType = newsDomainType;
        this.newsType = newsType;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("q")
    public String getQ() {
        return q;
    }

    @JsonProperty("search_in")
    public Optional<String> getSearchIn() {
        return searchIn;
    }

    @JsonProperty("predefined_sources")
    public String getPredefinedSources() {
        return predefinedSources;
    }

    @JsonProperty("sources")
    public String getSources() {
        return sources;
    }

    @JsonProperty("not_sources")
    public String getNotSources() {
        return notSources;
    }

    @JsonProperty("lang")
    public String getLang() {
        return lang;
    }

    @JsonProperty("not_lang")
    public String getNotLang() {
        return notLang;
    }

    @JsonProperty("countries")
    public String getCountries() {
        return countries;
    }

    @JsonProperty("not_countries")
    public String getNotCountries() {
        return notCountries;
    }

    @JsonProperty("not_author_name")
    public String getNotAuthorName() {
        return notAuthorName;
    }

    @JsonProperty("from_")
    public Optional<String> getFrom() {
        return from;
    }

    @JsonProperty("to_")
    public Optional<String> getTo() {
        return to;
    }

    @JsonProperty("published_date_precision")
    public Optional<String> getPublishedDatePrecision() {
        return publishedDatePrecision;
    }

    @JsonProperty("by_parse_date")
    public Optional<String> getByParseDate() {
        return byParseDate;
    }

    @JsonProperty("sort_by")
    public Optional<String> getSortBy() {
        return sortBy;
    }

    @JsonProperty("ranked_only")
    public Optional<String> getRankedOnly() {
        return rankedOnly;
    }

    @JsonProperty("from_rank")
    public Optional<String> getFromRank() {
        return fromRank;
    }

    @JsonProperty("to_rank")
    public Optional<String> getToRank() {
        return toRank;
    }

    @JsonProperty("is_headline")
    public Optional<String> getIsHeadline() {
        return isHeadline;
    }

    @JsonProperty("is_opinion")
    public Optional<String> getIsOpinion() {
        return isOpinion;
    }

    @JsonProperty("is_paid_content")
    public Optional<String> getIsPaidContent() {
        return isPaidContent;
    }

    @JsonProperty("parent_url")
    public String getParentUrl() {
        return parentUrl;
    }

    @JsonProperty("all_links")
    public String getAllLinks() {
        return allLinks;
    }

    @JsonProperty("all_domain_links")
    public String getAllDomainLinks() {
        return allDomainLinks;
    }

    @JsonProperty("word_count_min")
    public Optional<String> getWordCountMin() {
        return wordCountMin;
    }

    @JsonProperty("word_count_max")
    public Optional<String> getWordCountMax() {
        return wordCountMax;
    }

    @JsonProperty("page")
    public Optional<String> getPage() {
        return page;
    }

    @JsonProperty("page_size")
    public Optional<String> getPageSize() {
        return pageSize;
    }

    @JsonProperty("clustering_variable")
    public Optional<String> getClusteringVariable() {
        return clusteringVariable;
    }

    @JsonProperty("clustering_enabled")
    public Optional<String> getClusteringEnabled() {
        return clusteringEnabled;
    }

    @JsonProperty("clustering_threshold")
    public Optional<Double> getClusteringThreshold() {
        return clusteringThreshold;
    }

    @JsonProperty("include_nlp_data")
    public Optional<String> getIncludeNlpData() {
        return includeNlpData;
    }

    @JsonProperty("has_nlp")
    public Optional<Boolean> getHasNlp() {
        return hasNlp;
    }

    @JsonProperty("theme")
    public Optional<String> getTheme() {
        return theme;
    }

    @JsonProperty("not_theme")
    public Optional<String> getNotTheme() {
        return notTheme;
    }

    @JsonProperty("ORG_entity_name")
    public Optional<String> getOrgEntityName() {
        return orgEntityName;
    }

    @JsonProperty("PER_entity_name")
    public Optional<String> getPerEntityName() {
        return perEntityName;
    }

    @JsonProperty("LOC_entity_name")
    public Optional<String> getLocEntityName() {
        return locEntityName;
    }

    @JsonProperty("MISC_entity_name")
    public Optional<String> getMiscEntityName() {
        return miscEntityName;
    }

    @JsonProperty("title_sentiment_min")
    public Optional<Double> getTitleSentimentMin() {
        return titleSentimentMin;
    }

    @JsonProperty("title_sentiment_max")
    public Optional<Double> getTitleSentimentMax() {
        return titleSentimentMax;
    }

    @JsonProperty("content_sentiment_min")
    public Optional<Double> getContentSentimentMin() {
        return contentSentimentMin;
    }

    @JsonProperty("content_sentiment_max")
    public Optional<Double> getContentSentimentMax() {
        return contentSentimentMax;
    }

    @JsonProperty("iptc_tags")
    public String getIptcTags() {
        return iptcTags;
    }

    @JsonProperty("not_iptc_tags")
    public String getNotIptcTags() {
        return notIptcTags;
    }

    @JsonProperty("source_name")
    public String getSourceName() {
        return sourceName;
    }

    @JsonProperty("iab_tags")
    public String getIabTags() {
        return iabTags;
    }

    @JsonProperty("not_iab_tags")
    public String getNotIabTags() {
        return notIabTags;
    }

    @JsonProperty("exclude_duplicates")
    public Optional<Boolean> getExcludeDuplicates() {
        return excludeDuplicates;
    }

    @JsonProperty("additional_domain_info")
    public Optional<Boolean> getAdditionalDomainInfo() {
        return additionalDomainInfo;
    }

    @JsonProperty("is_news_domain")
    public Optional<Boolean> getIsNewsDomain() {
        return isNewsDomain;
    }

    @JsonProperty("news_domain_type")
    public String getNewsDomainType() {
        return newsDomainType;
    }

    @JsonProperty("news_type")
    public String getNewsType() {
        return newsType;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof SearchGetRequest && equalTo((SearchGetRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(SearchGetRequest other) {
        return q.equals(other.q)
                && searchIn.equals(other.searchIn)
                && predefinedSources.equals(other.predefinedSources)
                && sources.equals(other.sources)
                && notSources.equals(other.notSources)
                && lang.equals(other.lang)
                && notLang.equals(other.notLang)
                && countries.equals(other.countries)
                && notCountries.equals(other.notCountries)
                && notAuthorName.equals(other.notAuthorName)
                && from.equals(other.from)
                && to.equals(other.to)
                && publishedDatePrecision.equals(other.publishedDatePrecision)
                && byParseDate.equals(other.byParseDate)
                && sortBy.equals(other.sortBy)
                && rankedOnly.equals(other.rankedOnly)
                && fromRank.equals(other.fromRank)
                && toRank.equals(other.toRank)
                && isHeadline.equals(other.isHeadline)
                && isOpinion.equals(other.isOpinion)
                && isPaidContent.equals(other.isPaidContent)
                && parentUrl.equals(other.parentUrl)
                && allLinks.equals(other.allLinks)
                && allDomainLinks.equals(other.allDomainLinks)
                && wordCountMin.equals(other.wordCountMin)
                && wordCountMax.equals(other.wordCountMax)
                && page.equals(other.page)
                && pageSize.equals(other.pageSize)
                && clusteringVariable.equals(other.clusteringVariable)
                && clusteringEnabled.equals(other.clusteringEnabled)
                && clusteringThreshold.equals(other.clusteringThreshold)
                && includeNlpData.equals(other.includeNlpData)
                && hasNlp.equals(other.hasNlp)
                && theme.equals(other.theme)
                && notTheme.equals(other.notTheme)
                && orgEntityName.equals(other.orgEntityName)
                && perEntityName.equals(other.perEntityName)
                && locEntityName.equals(other.locEntityName)
                && miscEntityName.equals(other.miscEntityName)
                && titleSentimentMin.equals(other.titleSentimentMin)
                && titleSentimentMax.equals(other.titleSentimentMax)
                && contentSentimentMin.equals(other.contentSentimentMin)
                && contentSentimentMax.equals(other.contentSentimentMax)
                && iptcTags.equals(other.iptcTags)
                && notIptcTags.equals(other.notIptcTags)
                && sourceName.equals(other.sourceName)
                && iabTags.equals(other.iabTags)
                && notIabTags.equals(other.notIabTags)
                && excludeDuplicates.equals(other.excludeDuplicates)
                && additionalDomainInfo.equals(other.additionalDomainInfo)
                && isNewsDomain.equals(other.isNewsDomain)
                && newsDomainType.equals(other.newsDomainType)
                && newsType.equals(other.newsType);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.q,
                this.searchIn,
                this.predefinedSources,
                this.sources,
                this.notSources,
                this.lang,
                this.notLang,
                this.countries,
                this.notCountries,
                this.notAuthorName,
                this.from,
                this.to,
                this.publishedDatePrecision,
                this.byParseDate,
                this.sortBy,
                this.rankedOnly,
                this.fromRank,
                this.toRank,
                this.isHeadline,
                this.isOpinion,
                this.isPaidContent,
                this.parentUrl,
                this.allLinks,
                this.allDomainLinks,
                this.wordCountMin,
                this.wordCountMax,
                this.page,
                this.pageSize,
                this.clusteringVariable,
                this.clusteringEnabled,
                this.clusteringThreshold,
                this.includeNlpData,
                this.hasNlp,
                this.theme,
                this.notTheme,
                this.orgEntityName,
                this.perEntityName,
                this.locEntityName,
                this.miscEntityName,
                this.titleSentimentMin,
                this.titleSentimentMax,
                this.contentSentimentMin,
                this.contentSentimentMax,
                this.iptcTags,
                this.notIptcTags,
                this.sourceName,
                this.iabTags,
                this.notIabTags,
                this.excludeDuplicates,
                this.additionalDomainInfo,
                this.isNewsDomain,
                this.newsDomainType,
                this.newsType);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static QStage builder() {
        return new Builder();
    }

    public interface QStage {
        PredefinedSourcesStage q(@NotNull String q);

        Builder from(SearchGetRequest other);
    }

    public interface PredefinedSourcesStage {
        SourcesStage predefinedSources(@NotNull String predefinedSources);
    }

    public interface SourcesStage {
        NotSourcesStage sources(@NotNull String sources);
    }

    public interface NotSourcesStage {
        LangStage notSources(@NotNull String notSources);
    }

    public interface LangStage {
        NotLangStage lang(@NotNull String lang);
    }

    public interface NotLangStage {
        CountriesStage notLang(@NotNull String notLang);
    }

    public interface CountriesStage {
        NotCountriesStage countries(@NotNull String countries);
    }

    public interface NotCountriesStage {
        NotAuthorNameStage notCountries(@NotNull String notCountries);
    }

    public interface NotAuthorNameStage {
        ParentUrlStage notAuthorName(@NotNull String notAuthorName);
    }

    public interface ParentUrlStage {
        AllLinksStage parentUrl(@NotNull String parentUrl);
    }

    public interface AllLinksStage {
        AllDomainLinksStage allLinks(@NotNull String allLinks);
    }

    public interface AllDomainLinksStage {
        IptcTagsStage allDomainLinks(@NotNull String allDomainLinks);
    }

    public interface IptcTagsStage {
        NotIptcTagsStage iptcTags(@NotNull String iptcTags);
    }

    public interface NotIptcTagsStage {
        SourceNameStage notIptcTags(@NotNull String notIptcTags);
    }

    public interface SourceNameStage {
        IabTagsStage sourceName(@NotNull String sourceName);
    }

    public interface IabTagsStage {
        NotIabTagsStage iabTags(@NotNull String iabTags);
    }

    public interface NotIabTagsStage {
        NewsDomainTypeStage notIabTags(@NotNull String notIabTags);
    }

    public interface NewsDomainTypeStage {
        NewsTypeStage newsDomainType(@NotNull String newsDomainType);
    }

    public interface NewsTypeStage {
        _FinalStage newsType(@NotNull String newsType);
    }

    public interface _FinalStage {
        SearchGetRequest build();

        _FinalStage searchIn(Optional<String> searchIn);

        _FinalStage searchIn(String searchIn);

        _FinalStage from(Optional<String> from);

        _FinalStage from(String from);

        _FinalStage to(Optional<String> to);

        _FinalStage to(String to);

        _FinalStage publishedDatePrecision(Optional<String> publishedDatePrecision);

        _FinalStage publishedDatePrecision(String publishedDatePrecision);

        _FinalStage byParseDate(Optional<String> byParseDate);

        _FinalStage byParseDate(String byParseDate);

        _FinalStage sortBy(Optional<String> sortBy);

        _FinalStage sortBy(String sortBy);

        _FinalStage rankedOnly(Optional<String> rankedOnly);

        _FinalStage rankedOnly(String rankedOnly);

        _FinalStage fromRank(Optional<String> fromRank);

        _FinalStage fromRank(String fromRank);

        _FinalStage toRank(Optional<String> toRank);

        _FinalStage toRank(String toRank);

        _FinalStage isHeadline(Optional<String> isHeadline);

        _FinalStage isHeadline(String isHeadline);

        _FinalStage isOpinion(Optional<String> isOpinion);

        _FinalStage isOpinion(String isOpinion);

        _FinalStage isPaidContent(Optional<String> isPaidContent);

        _FinalStage isPaidContent(String isPaidContent);

        _FinalStage wordCountMin(Optional<String> wordCountMin);

        _FinalStage wordCountMin(String wordCountMin);

        _FinalStage wordCountMax(Optional<String> wordCountMax);

        _FinalStage wordCountMax(String wordCountMax);

        _FinalStage page(Optional<String> page);

        _FinalStage page(String page);

        _FinalStage pageSize(Optional<String> pageSize);

        _FinalStage pageSize(String pageSize);

        _FinalStage clusteringVariable(Optional<String> clusteringVariable);

        _FinalStage clusteringVariable(String clusteringVariable);

        _FinalStage clusteringEnabled(Optional<String> clusteringEnabled);

        _FinalStage clusteringEnabled(String clusteringEnabled);

        _FinalStage clusteringThreshold(Optional<Double> clusteringThreshold);

        _FinalStage clusteringThreshold(Double clusteringThreshold);

        _FinalStage includeNlpData(Optional<String> includeNlpData);

        _FinalStage includeNlpData(String includeNlpData);

        _FinalStage hasNlp(Optional<Boolean> hasNlp);

        _FinalStage hasNlp(Boolean hasNlp);

        _FinalStage theme(Optional<String> theme);

        _FinalStage theme(String theme);

        _FinalStage notTheme(Optional<String> notTheme);

        _FinalStage notTheme(String notTheme);

        _FinalStage orgEntityName(Optional<String> orgEntityName);

        _FinalStage orgEntityName(String orgEntityName);

        _FinalStage perEntityName(Optional<String> perEntityName);

        _FinalStage perEntityName(String perEntityName);

        _FinalStage locEntityName(Optional<String> locEntityName);

        _FinalStage locEntityName(String locEntityName);

        _FinalStage miscEntityName(Optional<String> miscEntityName);

        _FinalStage miscEntityName(String miscEntityName);

        _FinalStage titleSentimentMin(Optional<Double> titleSentimentMin);

        _FinalStage titleSentimentMin(Double titleSentimentMin);

        _FinalStage titleSentimentMax(Optional<Double> titleSentimentMax);

        _FinalStage titleSentimentMax(Double titleSentimentMax);

        _FinalStage contentSentimentMin(Optional<Double> contentSentimentMin);

        _FinalStage contentSentimentMin(Double contentSentimentMin);

        _FinalStage contentSentimentMax(Optional<Double> contentSentimentMax);

        _FinalStage contentSentimentMax(Double contentSentimentMax);

        _FinalStage excludeDuplicates(Optional<Boolean> excludeDuplicates);

        _FinalStage excludeDuplicates(Boolean excludeDuplicates);

        _FinalStage additionalDomainInfo(Optional<Boolean> additionalDomainInfo);

        _FinalStage additionalDomainInfo(Boolean additionalDomainInfo);

        _FinalStage isNewsDomain(Optional<Boolean> isNewsDomain);

        _FinalStage isNewsDomain(Boolean isNewsDomain);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements QStage,
                    PredefinedSourcesStage,
                    SourcesStage,
                    NotSourcesStage,
                    LangStage,
                    NotLangStage,
                    CountriesStage,
                    NotCountriesStage,
                    NotAuthorNameStage,
                    ParentUrlStage,
                    AllLinksStage,
                    AllDomainLinksStage,
                    IptcTagsStage,
                    NotIptcTagsStage,
                    SourceNameStage,
                    IabTagsStage,
                    NotIabTagsStage,
                    NewsDomainTypeStage,
                    NewsTypeStage,
                    _FinalStage {
        private String q;

        private String predefinedSources;

        private String sources;

        private String notSources;

        private String lang;

        private String notLang;

        private String countries;

        private String notCountries;

        private String notAuthorName;

        private String parentUrl;

        private String allLinks;

        private String allDomainLinks;

        private String iptcTags;

        private String notIptcTags;

        private String sourceName;

        private String iabTags;

        private String notIabTags;

        private String newsDomainType;

        private String newsType;

        private Optional<Boolean> isNewsDomain = Optional.empty();

        private Optional<Boolean> additionalDomainInfo = Optional.empty();

        private Optional<Boolean> excludeDuplicates = Optional.empty();

        private Optional<Double> contentSentimentMax = Optional.empty();

        private Optional<Double> contentSentimentMin = Optional.empty();

        private Optional<Double> titleSentimentMax = Optional.empty();

        private Optional<Double> titleSentimentMin = Optional.empty();

        private Optional<String> miscEntityName = Optional.empty();

        private Optional<String> locEntityName = Optional.empty();

        private Optional<String> perEntityName = Optional.empty();

        private Optional<String> orgEntityName = Optional.empty();

        private Optional<String> notTheme = Optional.empty();

        private Optional<String> theme = Optional.empty();

        private Optional<Boolean> hasNlp = Optional.empty();

        private Optional<String> includeNlpData = Optional.empty();

        private Optional<Double> clusteringThreshold = Optional.empty();

        private Optional<String> clusteringEnabled = Optional.empty();

        private Optional<String> clusteringVariable = Optional.empty();

        private Optional<String> pageSize = Optional.empty();

        private Optional<String> page = Optional.empty();

        private Optional<String> wordCountMax = Optional.empty();

        private Optional<String> wordCountMin = Optional.empty();

        private Optional<String> isPaidContent = Optional.empty();

        private Optional<String> isOpinion = Optional.empty();

        private Optional<String> isHeadline = Optional.empty();

        private Optional<String> toRank = Optional.empty();

        private Optional<String> fromRank = Optional.empty();

        private Optional<String> rankedOnly = Optional.empty();

        private Optional<String> sortBy = Optional.empty();

        private Optional<String> byParseDate = Optional.empty();

        private Optional<String> publishedDatePrecision = Optional.empty();

        private Optional<String> to = Optional.empty();

        private Optional<String> from = Optional.empty();

        private Optional<String> searchIn = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(SearchGetRequest other) {
            q(other.getQ());
            searchIn(other.getSearchIn());
            predefinedSources(other.getPredefinedSources());
            sources(other.getSources());
            notSources(other.getNotSources());
            lang(other.getLang());
            notLang(other.getNotLang());
            countries(other.getCountries());
            notCountries(other.getNotCountries());
            notAuthorName(other.getNotAuthorName());
            from(other.getFrom());
            to(other.getTo());
            publishedDatePrecision(other.getPublishedDatePrecision());
            byParseDate(other.getByParseDate());
            sortBy(other.getSortBy());
            rankedOnly(other.getRankedOnly());
            fromRank(other.getFromRank());
            toRank(other.getToRank());
            isHeadline(other.getIsHeadline());
            isOpinion(other.getIsOpinion());
            isPaidContent(other.getIsPaidContent());
            parentUrl(other.getParentUrl());
            allLinks(other.getAllLinks());
            allDomainLinks(other.getAllDomainLinks());
            wordCountMin(other.getWordCountMin());
            wordCountMax(other.getWordCountMax());
            page(other.getPage());
            pageSize(other.getPageSize());
            clusteringVariable(other.getClusteringVariable());
            clusteringEnabled(other.getClusteringEnabled());
            clusteringThreshold(other.getClusteringThreshold());
            includeNlpData(other.getIncludeNlpData());
            hasNlp(other.getHasNlp());
            theme(other.getTheme());
            notTheme(other.getNotTheme());
            orgEntityName(other.getOrgEntityName());
            perEntityName(other.getPerEntityName());
            locEntityName(other.getLocEntityName());
            miscEntityName(other.getMiscEntityName());
            titleSentimentMin(other.getTitleSentimentMin());
            titleSentimentMax(other.getTitleSentimentMax());
            contentSentimentMin(other.getContentSentimentMin());
            contentSentimentMax(other.getContentSentimentMax());
            iptcTags(other.getIptcTags());
            notIptcTags(other.getNotIptcTags());
            sourceName(other.getSourceName());
            iabTags(other.getIabTags());
            notIabTags(other.getNotIabTags());
            excludeDuplicates(other.getExcludeDuplicates());
            additionalDomainInfo(other.getAdditionalDomainInfo());
            isNewsDomain(other.getIsNewsDomain());
            newsDomainType(other.getNewsDomainType());
            newsType(other.getNewsType());
            return this;
        }

        @java.lang.Override
        @JsonSetter("q")
        public PredefinedSourcesStage q(@NotNull String q) {
            this.q = Objects.requireNonNull(q, "q must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("predefined_sources")
        public SourcesStage predefinedSources(@NotNull String predefinedSources) {
            this.predefinedSources = Objects.requireNonNull(predefinedSources, "predefinedSources must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("sources")
        public NotSourcesStage sources(@NotNull String sources) {
            this.sources = Objects.requireNonNull(sources, "sources must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("not_sources")
        public LangStage notSources(@NotNull String notSources) {
            this.notSources = Objects.requireNonNull(notSources, "notSources must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("lang")
        public NotLangStage lang(@NotNull String lang) {
            this.lang = Objects.requireNonNull(lang, "lang must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("not_lang")
        public CountriesStage notLang(@NotNull String notLang) {
            this.notLang = Objects.requireNonNull(notLang, "notLang must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("countries")
        public NotCountriesStage countries(@NotNull String countries) {
            this.countries = Objects.requireNonNull(countries, "countries must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("not_countries")
        public NotAuthorNameStage notCountries(@NotNull String notCountries) {
            this.notCountries = Objects.requireNonNull(notCountries, "notCountries must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("not_author_name")
        public ParentUrlStage notAuthorName(@NotNull String notAuthorName) {
            this.notAuthorName = Objects.requireNonNull(notAuthorName, "notAuthorName must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("parent_url")
        public AllLinksStage parentUrl(@NotNull String parentUrl) {
            this.parentUrl = Objects.requireNonNull(parentUrl, "parentUrl must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("all_links")
        public AllDomainLinksStage allLinks(@NotNull String allLinks) {
            this.allLinks = Objects.requireNonNull(allLinks, "allLinks must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("all_domain_links")
        public IptcTagsStage allDomainLinks(@NotNull String allDomainLinks) {
            this.allDomainLinks = Objects.requireNonNull(allDomainLinks, "allDomainLinks must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("iptc_tags")
        public NotIptcTagsStage iptcTags(@NotNull String iptcTags) {
            this.iptcTags = Objects.requireNonNull(iptcTags, "iptcTags must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("not_iptc_tags")
        public SourceNameStage notIptcTags(@NotNull String notIptcTags) {
            this.notIptcTags = Objects.requireNonNull(notIptcTags, "notIptcTags must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("source_name")
        public IabTagsStage sourceName(@NotNull String sourceName) {
            this.sourceName = Objects.requireNonNull(sourceName, "sourceName must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("iab_tags")
        public NotIabTagsStage iabTags(@NotNull String iabTags) {
            this.iabTags = Objects.requireNonNull(iabTags, "iabTags must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("not_iab_tags")
        public NewsDomainTypeStage notIabTags(@NotNull String notIabTags) {
            this.notIabTags = Objects.requireNonNull(notIabTags, "notIabTags must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("news_domain_type")
        public NewsTypeStage newsDomainType(@NotNull String newsDomainType) {
            this.newsDomainType = Objects.requireNonNull(newsDomainType, "newsDomainType must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("news_type")
        public _FinalStage newsType(@NotNull String newsType) {
            this.newsType = Objects.requireNonNull(newsType, "newsType must not be null");
            return this;
        }

        @java.lang.Override
        public _FinalStage isNewsDomain(Boolean isNewsDomain) {
            this.isNewsDomain = Optional.ofNullable(isNewsDomain);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "is_news_domain", nulls = Nulls.SKIP)
        public _FinalStage isNewsDomain(Optional<Boolean> isNewsDomain) {
            this.isNewsDomain = isNewsDomain;
            return this;
        }

        @java.lang.Override
        public _FinalStage additionalDomainInfo(Boolean additionalDomainInfo) {
            this.additionalDomainInfo = Optional.ofNullable(additionalDomainInfo);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "additional_domain_info", nulls = Nulls.SKIP)
        public _FinalStage additionalDomainInfo(Optional<Boolean> additionalDomainInfo) {
            this.additionalDomainInfo = additionalDomainInfo;
            return this;
        }

        @java.lang.Override
        public _FinalStage excludeDuplicates(Boolean excludeDuplicates) {
            this.excludeDuplicates = Optional.ofNullable(excludeDuplicates);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "exclude_duplicates", nulls = Nulls.SKIP)
        public _FinalStage excludeDuplicates(Optional<Boolean> excludeDuplicates) {
            this.excludeDuplicates = excludeDuplicates;
            return this;
        }

        @java.lang.Override
        public _FinalStage contentSentimentMax(Double contentSentimentMax) {
            this.contentSentimentMax = Optional.ofNullable(contentSentimentMax);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "content_sentiment_max", nulls = Nulls.SKIP)
        public _FinalStage contentSentimentMax(Optional<Double> contentSentimentMax) {
            this.contentSentimentMax = contentSentimentMax;
            return this;
        }

        @java.lang.Override
        public _FinalStage contentSentimentMin(Double contentSentimentMin) {
            this.contentSentimentMin = Optional.ofNullable(contentSentimentMin);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "content_sentiment_min", nulls = Nulls.SKIP)
        public _FinalStage contentSentimentMin(Optional<Double> contentSentimentMin) {
            this.contentSentimentMin = contentSentimentMin;
            return this;
        }

        @java.lang.Override
        public _FinalStage titleSentimentMax(Double titleSentimentMax) {
            this.titleSentimentMax = Optional.ofNullable(titleSentimentMax);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "title_sentiment_max", nulls = Nulls.SKIP)
        public _FinalStage titleSentimentMax(Optional<Double> titleSentimentMax) {
            this.titleSentimentMax = titleSentimentMax;
            return this;
        }

        @java.lang.Override
        public _FinalStage titleSentimentMin(Double titleSentimentMin) {
            this.titleSentimentMin = Optional.ofNullable(titleSentimentMin);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "title_sentiment_min", nulls = Nulls.SKIP)
        public _FinalStage titleSentimentMin(Optional<Double> titleSentimentMin) {
            this.titleSentimentMin = titleSentimentMin;
            return this;
        }

        @java.lang.Override
        public _FinalStage miscEntityName(String miscEntityName) {
            this.miscEntityName = Optional.ofNullable(miscEntityName);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "MISC_entity_name", nulls = Nulls.SKIP)
        public _FinalStage miscEntityName(Optional<String> miscEntityName) {
            this.miscEntityName = miscEntityName;
            return this;
        }

        @java.lang.Override
        public _FinalStage locEntityName(String locEntityName) {
            this.locEntityName = Optional.ofNullable(locEntityName);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "LOC_entity_name", nulls = Nulls.SKIP)
        public _FinalStage locEntityName(Optional<String> locEntityName) {
            this.locEntityName = locEntityName;
            return this;
        }

        @java.lang.Override
        public _FinalStage perEntityName(String perEntityName) {
            this.perEntityName = Optional.ofNullable(perEntityName);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "PER_entity_name", nulls = Nulls.SKIP)
        public _FinalStage perEntityName(Optional<String> perEntityName) {
            this.perEntityName = perEntityName;
            return this;
        }

        @java.lang.Override
        public _FinalStage orgEntityName(String orgEntityName) {
            this.orgEntityName = Optional.ofNullable(orgEntityName);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "ORG_entity_name", nulls = Nulls.SKIP)
        public _FinalStage orgEntityName(Optional<String> orgEntityName) {
            this.orgEntityName = orgEntityName;
            return this;
        }

        @java.lang.Override
        public _FinalStage notTheme(String notTheme) {
            this.notTheme = Optional.ofNullable(notTheme);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "not_theme", nulls = Nulls.SKIP)
        public _FinalStage notTheme(Optional<String> notTheme) {
            this.notTheme = notTheme;
            return this;
        }

        @java.lang.Override
        public _FinalStage theme(String theme) {
            this.theme = Optional.ofNullable(theme);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "theme", nulls = Nulls.SKIP)
        public _FinalStage theme(Optional<String> theme) {
            this.theme = theme;
            return this;
        }

        @java.lang.Override
        public _FinalStage hasNlp(Boolean hasNlp) {
            this.hasNlp = Optional.ofNullable(hasNlp);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "has_nlp", nulls = Nulls.SKIP)
        public _FinalStage hasNlp(Optional<Boolean> hasNlp) {
            this.hasNlp = hasNlp;
            return this;
        }

        @java.lang.Override
        public _FinalStage includeNlpData(String includeNlpData) {
            this.includeNlpData = Optional.ofNullable(includeNlpData);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "include_nlp_data", nulls = Nulls.SKIP)
        public _FinalStage includeNlpData(Optional<String> includeNlpData) {
            this.includeNlpData = includeNlpData;
            return this;
        }

        @java.lang.Override
        public _FinalStage clusteringThreshold(Double clusteringThreshold) {
            this.clusteringThreshold = Optional.ofNullable(clusteringThreshold);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "clustering_threshold", nulls = Nulls.SKIP)
        public _FinalStage clusteringThreshold(Optional<Double> clusteringThreshold) {
            this.clusteringThreshold = clusteringThreshold;
            return this;
        }

        @java.lang.Override
        public _FinalStage clusteringEnabled(String clusteringEnabled) {
            this.clusteringEnabled = Optional.ofNullable(clusteringEnabled);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "clustering_enabled", nulls = Nulls.SKIP)
        public _FinalStage clusteringEnabled(Optional<String> clusteringEnabled) {
            this.clusteringEnabled = clusteringEnabled;
            return this;
        }

        @java.lang.Override
        public _FinalStage clusteringVariable(String clusteringVariable) {
            this.clusteringVariable = Optional.ofNullable(clusteringVariable);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "clustering_variable", nulls = Nulls.SKIP)
        public _FinalStage clusteringVariable(Optional<String> clusteringVariable) {
            this.clusteringVariable = clusteringVariable;
            return this;
        }

        @java.lang.Override
        public _FinalStage pageSize(String pageSize) {
            this.pageSize = Optional.ofNullable(pageSize);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "page_size", nulls = Nulls.SKIP)
        public _FinalStage pageSize(Optional<String> pageSize) {
            this.pageSize = pageSize;
            return this;
        }

        @java.lang.Override
        public _FinalStage page(String page) {
            this.page = Optional.ofNullable(page);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "page", nulls = Nulls.SKIP)
        public _FinalStage page(Optional<String> page) {
            this.page = page;
            return this;
        }

        @java.lang.Override
        public _FinalStage wordCountMax(String wordCountMax) {
            this.wordCountMax = Optional.ofNullable(wordCountMax);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "word_count_max", nulls = Nulls.SKIP)
        public _FinalStage wordCountMax(Optional<String> wordCountMax) {
            this.wordCountMax = wordCountMax;
            return this;
        }

        @java.lang.Override
        public _FinalStage wordCountMin(String wordCountMin) {
            this.wordCountMin = Optional.ofNullable(wordCountMin);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "word_count_min", nulls = Nulls.SKIP)
        public _FinalStage wordCountMin(Optional<String> wordCountMin) {
            this.wordCountMin = wordCountMin;
            return this;
        }

        @java.lang.Override
        public _FinalStage isPaidContent(String isPaidContent) {
            this.isPaidContent = Optional.ofNullable(isPaidContent);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "is_paid_content", nulls = Nulls.SKIP)
        public _FinalStage isPaidContent(Optional<String> isPaidContent) {
            this.isPaidContent = isPaidContent;
            return this;
        }

        @java.lang.Override
        public _FinalStage isOpinion(String isOpinion) {
            this.isOpinion = Optional.ofNullable(isOpinion);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "is_opinion", nulls = Nulls.SKIP)
        public _FinalStage isOpinion(Optional<String> isOpinion) {
            this.isOpinion = isOpinion;
            return this;
        }

        @java.lang.Override
        public _FinalStage isHeadline(String isHeadline) {
            this.isHeadline = Optional.ofNullable(isHeadline);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "is_headline", nulls = Nulls.SKIP)
        public _FinalStage isHeadline(Optional<String> isHeadline) {
            this.isHeadline = isHeadline;
            return this;
        }

        @java.lang.Override
        public _FinalStage toRank(String toRank) {
            this.toRank = Optional.ofNullable(toRank);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "to_rank", nulls = Nulls.SKIP)
        public _FinalStage toRank(Optional<String> toRank) {
            this.toRank = toRank;
            return this;
        }

        @java.lang.Override
        public _FinalStage fromRank(String fromRank) {
            this.fromRank = Optional.ofNullable(fromRank);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "from_rank", nulls = Nulls.SKIP)
        public _FinalStage fromRank(Optional<String> fromRank) {
            this.fromRank = fromRank;
            return this;
        }

        @java.lang.Override
        public _FinalStage rankedOnly(String rankedOnly) {
            this.rankedOnly = Optional.ofNullable(rankedOnly);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "ranked_only", nulls = Nulls.SKIP)
        public _FinalStage rankedOnly(Optional<String> rankedOnly) {
            this.rankedOnly = rankedOnly;
            return this;
        }

        @java.lang.Override
        public _FinalStage sortBy(String sortBy) {
            this.sortBy = Optional.ofNullable(sortBy);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "sort_by", nulls = Nulls.SKIP)
        public _FinalStage sortBy(Optional<String> sortBy) {
            this.sortBy = sortBy;
            return this;
        }

        @java.lang.Override
        public _FinalStage byParseDate(String byParseDate) {
            this.byParseDate = Optional.ofNullable(byParseDate);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "by_parse_date", nulls = Nulls.SKIP)
        public _FinalStage byParseDate(Optional<String> byParseDate) {
            this.byParseDate = byParseDate;
            return this;
        }

        @java.lang.Override
        public _FinalStage publishedDatePrecision(String publishedDatePrecision) {
            this.publishedDatePrecision = Optional.ofNullable(publishedDatePrecision);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "published_date_precision", nulls = Nulls.SKIP)
        public _FinalStage publishedDatePrecision(Optional<String> publishedDatePrecision) {
            this.publishedDatePrecision = publishedDatePrecision;
            return this;
        }

        @java.lang.Override
        public _FinalStage to(String to) {
            this.to = Optional.ofNullable(to);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "to_", nulls = Nulls.SKIP)
        public _FinalStage to(Optional<String> to) {
            this.to = to;
            return this;
        }

        @java.lang.Override
        public _FinalStage from(String from) {
            this.from = Optional.ofNullable(from);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "from_", nulls = Nulls.SKIP)
        public _FinalStage from(Optional<String> from) {
            this.from = from;
            return this;
        }

        @java.lang.Override
        public _FinalStage searchIn(String searchIn) {
            this.searchIn = Optional.ofNullable(searchIn);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "search_in", nulls = Nulls.SKIP)
        public _FinalStage searchIn(Optional<String> searchIn) {
            this.searchIn = searchIn;
            return this;
        }

        @java.lang.Override
        public SearchGetRequest build() {
            return new SearchGetRequest(
                    q,
                    searchIn,
                    predefinedSources,
                    sources,
                    notSources,
                    lang,
                    notLang,
                    countries,
                    notCountries,
                    notAuthorName,
                    from,
                    to,
                    publishedDatePrecision,
                    byParseDate,
                    sortBy,
                    rankedOnly,
                    fromRank,
                    toRank,
                    isHeadline,
                    isOpinion,
                    isPaidContent,
                    parentUrl,
                    allLinks,
                    allDomainLinks,
                    wordCountMin,
                    wordCountMax,
                    page,
                    pageSize,
                    clusteringVariable,
                    clusteringEnabled,
                    clusteringThreshold,
                    includeNlpData,
                    hasNlp,
                    theme,
                    notTheme,
                    orgEntityName,
                    perEntityName,
                    locEntityName,
                    miscEntityName,
                    titleSentimentMin,
                    titleSentimentMax,
                    contentSentimentMin,
                    contentSentimentMax,
                    iptcTags,
                    notIptcTags,
                    sourceName,
                    iabTags,
                    notIabTags,
                    excludeDuplicates,
                    additionalDomainInfo,
                    isNewsDomain,
                    newsDomainType,
                    newsType,
                    additionalProperties);
        }
    }
}
